{
    "pipes": [],
    "interfaces": [
        {
            "name": "GunCard",
            "id": "interface-GunCard-de1df1201f030c60e7b8abe8986a2e6d1a26a465bcc87ee800238280f89663f57deb563751bd9ae36fe9de8f25a10ad50532821964f00a5d5a252ee3b506d648",
            "file": "src/app/types.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export type GunTypes = \"Pistol\" | \"Submachine Gun\" | \"Shotgun\" | \"Combat Rifle\" | \"Sniper Rifle\" | \"Rocket Launcher\" | undefined;\r\nexport type GuildTypes = \"Alas!\" | \"Skuldugger\" | \"Dahlia\" | \"Blackpowder\" | \"Malefactor\" | \"Hyperius\" | \"Feriore\" | \"Torgue\" | \"Stoker\" | undefined;\r\nexport type RarityTypes = \"Common\" | \"Uncommon\" | \"Rare\" | \"Epic\" | \"Legendary\";\r\nexport type ElementTypes = \"Incendiary\" | \"Incendiary (+1d6)\" | \"Incendiary (+2d6)\" | \"Shock\" | \"Shock (+1d6)\" | \"Shock (+2d6)\" | \"Corrosive\" | \"Corrosive (+1d6)\" | \"Corrosive (+2d6)\" | \"Cryo\" | \"Cryo (+1d6)\" | \"Cryo (+2d6)\" | \"Explosive\" | \"Explosive (+1d6)\" | \"Explosive (+2d6)\" | \"Radiation\" | \"Radiation (+1d6)\" | \"Radiation (+2d6)\" | \"Radiation + Incendiary\" | \"Shock + Corrosive\" | \"Explosive + Cryo\" | \"N/A\"\r\nexport type PrefixTypes = \"Aback\" | \"Aberrant\" | \"Abhorrent\" | \"Abiding\" | \"Abrasive\" | \"Actually\" | \"Adhesive\" | \"Adorable\" | \"Bitter\" | \"Boundless\" | \"Breezy\" | \"Certain\" | \"Cheerful\" | \"Classy\" | \"Clever\" | \"Critical\" | \"Damp\" | \"Deafening\" | \"Disgusted\" | \"Eatable\" | \"Economic\" | \"Elfin\" | \"Exciting\" | \"Far-Flung\" | \"Far\" | \"Few\" | \"Fresh\" | \"Frightening\" | \"Gaudy\" | \"Grey\" | \"Grotesque\" | \"Handsomely\" | \"Holistic\" | \"Honorable\" | \"Horrible\" | \"Humdrum\" | \"Hysterical\" | \"Imaginary\" | \"Imminent\" | \"Impolite\" | \"Incandescent\" | \"Jazzy\" | \"Joyous\" | \"Jumbled\" | \"Knotty\" | \"Knowing\" | \"Labored\" | \"Legal\" | \"Light\" | \"Lively\" | \"Mad\" | \"Madly\" | \"Mixed\" | \"Mundane\" | \"Normal\" | \"Nutty\" | \"Obnoxious\" | \"Obtainable\" | \"One\" | \"Open\" | \"Overconfident\" | \"Panoramic\" | \"Parallel\" | \"Practical\" | \"Pumped\" | \"Puny\" | \"Questionable\" | \"Relevant\" | \"Resolute\" | \"Same\" | \"Scintillating\" | \"Selfish\" | \"Several\" | \"Shaky\" | \"Sleepy\" | \"Small\" | \"Smelly\" | \"Splendid\" | \"Strong\" | \"Stupendous\" | \"Suitable\" | \"Superb\" | \"Swift\" | \"Synonymous\" | \"Tart\" | \"Tawdry\" | \"Tender\" | \"Tense\" | \"Thirsty\" | \"Toothsome\" | \"Towering\" | \"Two\" | \"Unable\" | \"Unfair\" | \"Unwieldy\" | \"Utter\" | \"Woozy\" | \"Worried\" | \"Wrathful\" | \"Zesty\" | undefined;\r\nexport type RedPrefixTypes = \"POP POP!\" | \"I never freeze\" | \"Toasty!\" | \"Was he slow?\" | \"We Hate You, Please Die.\" | \"Tell them they're next\" | \"PAN SHOT!\" | \"Envision Wyverns\" | \"I'm melting!\" | \"The same thing that happens to everything else\" | \"360 quickscope\" | \"Any Questions!\" | \"Blood and Thunder\" | \"SI VIS PACEM, PARA BELLUM\" | \"You're breathtaking!\" | \"Pass turn.\" | \"I am Vengeance!\" | \"Roll the dice\" | \"One among the fence\" | \"Don't be sorry. Be better.\" | \"THE PICKLES!\" | \"Do a kickflip!\" | \"Extinction is the Rule\" | \"Never Fight a Knight with a Perm\" | \"Bye bye, little Butt Stallion\" | \"Time 2 Hack\" | \"Hate Magic... so much\" | \"OFF WITH THEIR HEADS!\" | \"This is my BOOMSTICK!\" | \"Super easy, barely an inconvenience\" | \"Hold onto your butts.\" | \"The Wise Man's Fear\" | \"I don't want this isolation\" | \"TUFF with two Fs\" | \"Unlikely Maths\" | \"Gravity's Rainbow\" | \"Let's do this one last time...\" | \"BIP!\" | \"The Heaviest Matter of the Universe\" | \"GREEN FLAME\" | \"More like Bore Ragnarok!\" | \"That's levitation, Holmes!\" | \"Let's boo-boo.\" | \"Mmm Watcha Say...\" | \"Here Comes the FunCooker\" | \"Overwhelming strength is boring.\" | \"Stop talking, I will win. It's what heroes do.\" | \"Richer and cleverer than everyone else!\" | \"METAL WILL DESTROY ALL EVIL!\" | \"Life is conundrum of esoterica\" | undefined;\r\nexport interface GunCard {\r\n    level: number;\r\n    type: GunTypes;\r\n    guild: GuildTypes;\r\n    rarity: RarityTypes;\r\n    element: ElementTypes\r\n    prefix?: PrefixTypes | RedPrefixTypes;\r\n}",
            "properties": [
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementTypes",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "guild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GuildTypes",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PrefixTypes | RedPrefixTypes",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "rarity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RarityTypes",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GunTypes",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 171,
            "methods": [],
            "extends": []
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d108792cea69b7c92f43f8cc2aed392356eeae673532181f370d556672693c92d4c8f7b205d8d0e824ab0118d51a450d8c23b4174011cdef949874e06858b44c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "controller",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AbortController",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "currentGun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GunCard",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "dialog",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLDialogElement>",
                    "optional": false,
                    "description": "",
                    "line": 59,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'dialog'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "dialogState",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"read\" | \"write\"",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "gunElementRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "gunForm",
                    "defaultValue": "new FormGroup({\n    type: new FormControl('Pistol'),\n    guild: new FormControl('Alas!')\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "gunGuildRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "gunList",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GunCard[]",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "gunPrefixRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "gunRarityRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "gunTypeRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "hasScannedItem",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLInputElement>",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'level'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "loadedGun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 61,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'loadedGun'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "log",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ElementRef<HTMLElement>",
                    "optional": false,
                    "description": "",
                    "line": 60,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "'log'"
                        }
                    ],
                    "modifierKind": [
                        170
                    ]
                },
                {
                    "name": "ndef",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "NDEFReader",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "nfc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "stagingGun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "GunCard",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "title",
                    "defaultValue": "'Bunkers and Badasses Angular'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "_Roll",
                    "args": [
                        {
                            "name": "dieType",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "dieType",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "clearLog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 163,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "closeDialog",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 167,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "consoleLog",
                    "args": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 159,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "data",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "convertToRarityType",
                    "args": [
                        {
                            "name": "rarity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "RarityTypes",
                    "typeParameters": [],
                    "line": 310,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "rarity",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateNewGun",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getElement",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "ElementTypes",
                    "typeParameters": [],
                    "line": 188,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getGuild",
                    "args": [
                        {
                            "name": "type",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "guild",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 180,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "guild",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getLevel",
                    "args": [
                        {
                            "name": "string",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 176,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "string",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getPrefix",
                    "args": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 242,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getRarity",
                    "args": [
                        {
                            "name": "number",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 184,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "number",
                            "type": "number[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loadGun",
                    "args": [
                        {
                            "name": "event",
                            "type": "GunCard",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 306,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "GunCard",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSave",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 292,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onSubmit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 255,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "readTag",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 327,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                },
                {
                    "name": "setMaliwanElement",
                    "args": [],
                    "optional": false,
                    "returnType": "ElementTypes",
                    "typeParameters": [],
                    "line": 208,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "writeTag",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 367,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        134
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "FormsModule",
                    "type": "module"
                },
                {
                    "name": "ReactiveFormsModule",
                    "type": "module"
                },
                {
                    "name": "RouterLink"
                },
                {
                    "name": "RouterLinkActive"
                },
                {
                    "name": "GunCardComponent",
                    "type": "component"
                },
                {
                    "name": "TitleCasePipe",
                    "type": "pipe"
                },
                {
                    "name": "HistoryListComponent",
                    "type": "component"
                },
                {
                    "name": "GunCardV2Component",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectorRef, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { CommonModule, TitleCasePipe } from '@angular/common';\nimport { RouterLink, RouterLinkActive, RouterOutlet } from '@angular/router';\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { GUN_TYPE_RESULTS, ELEMENTAL_TABLE, GUILD_BONUSES, GUN_RARITIES, GUN_RARTIY_TABLE, GUN_TABLE, PREFIXES, RED_PREFIXES } from './tables';\nimport { GunCardComponent } from './gun-card/gun-card.component';\nimport { ElementTypes, GuildTypes, GunCard, GunTypes, PrefixTypes, RarityTypes, RedPrefixTypes } from './types';\nimport { HistoryListComponent } from './history-list/history-list.component';\nimport { GunCardV2Component } from './gun-card-v2/gun-card-v2.component';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [\n    CommonModule, \n    RouterOutlet, \n    FormsModule, \n    ReactiveFormsModule, \n    RouterLink, \n    RouterLinkActive, \n    GunCardComponent, \n    TitleCasePipe, \n    HistoryListComponent,\n    GunCardV2Component\n  ],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent implements OnInit {\n  title = 'Bunkers and Badasses Angular';\n  \n  gunForm = new FormGroup({\n    type: new FormControl('Pistol'),\n    guild: new FormControl('Alas!')\n  })\n  \n  gunTypeRoll!: number;\n  gunGuildRoll!: number;\n  gunRarityRoll!: number[];\n  gunElementRoll!: number;\n  gunPrefixRoll!: number;\n\n  nfc!: string;\n  ndef!: NDEFReader;\n  controller!: AbortController;\n  dialogState!: 'read' | 'write';\n  hasScannedItem: boolean = false;\n\n  currentGun!: GunCard;\n  stagingGun!: GunCard;\n  gunList: GunCard[] = [];\n\n\n  get hasNDEFReader():boolean {\n    return \"NDEFReader\" in window;\n  }\n\n  @ViewChild('level') level!: ElementRef<HTMLInputElement>;\n  @ViewChild('dialog') dialog!: ElementRef<HTMLDialogElement>;\n  @ViewChild('log') log!: ElementRef<HTMLElement>;\n  @ViewChild('loadedGun') loadedGun!: ElementRef<HTMLElement>;\n  \n  private _Roll(dieType: number) {\n    return Math.ceil(Math.random() * dieType);\n  }\n\n  constructor(private _cdf: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n    this.currentGun = {\n      level: 1,\n      type: \"Pistol\",\n      guild: \"Alas!\",\n      rarity: \"Common\",\n      element: \"N/A\",\n      prefix: undefined,\n    }\n    this.generateNewGun();\n  }\n\n  generateNewGun() {\n    //Reset \n    this.gunForm = new FormGroup({\n      type: new FormControl('Pistol'),\n      guild: new FormControl('Alas!')\n    })\n\n    //New Gun\n    this.currentGun.level = parseInt(this.level?.nativeElement.value) || 1;\n\n    //Step 1 - Rolling Gun Type\n    this.gunTypeRoll = this._Roll(8);\n    let gunTypeResult = GUN_TYPE_RESULTS[this.gunTypeRoll-1];\n    console.group(\"Generated Gun\");\n    console.log('Rolling Gun Type...');\n    console.log(`%cYou rolled a ${this.gunTypeRoll}: ${this.gunTypeRoll === 8 ? 'Choice' : gunTypeResult}`, \"color: yellow\");\n\n    //Step 2 - Rolling Gun Guild\n    console.log('Rolling Gun Guild...');\n    this.gunGuildRoll = this._Roll(8);\n    if (this.gunTypeRoll < 7) {\n      this.currentGun.guild = this.getGuild(this.gunTypeRoll, this.gunGuildRoll) as GuildTypes,\n      this.currentGun.type = GUN_TYPE_RESULTS[this.gunTypeRoll-1] as GunTypes,\n      console.log(`%cYou rolled a ${this.gunGuildRoll}: ${this.currentGun.guild}`, \"color: yellow\");\n    } else if (this.gunTypeRoll === 7) {\n      if (this.gunGuildRoll === 8) {\n        this.currentGun.guild = undefined;\n        this.gunForm = new FormGroup({\n          type: new FormControl({value: 'Rocket Launcher', disabled: true}),\n          guild: new FormControl('Alas!')\n        })\n      } else {\n        this.gunTypeRoll = [1, 3, 1, 2, 3, 4, 5, 6][this.gunGuildRoll-1];\n        this.currentGun.guild = this.getGuild(this.gunTypeRoll, this.gunGuildRoll) as GuildTypes;\n        this.currentGun.type = GUN_TYPE_RESULTS[this.gunTypeRoll-1] as GunTypes;\n      }\n    } else {\n      this.currentGun.type = this.currentGun.guild = undefined;\n    }\n\n    //Step 3 - Rolling Gun Rarity\n    console.log('Rolling Gun Rarity...');\n\n    this.gunRarityRoll = [this._Roll(4), this._Roll(6)];\n    let gunRarityResult = this.getRarity(this.gunRarityRoll);\n    this.currentGun.rarity = this.convertToRarityType(gunRarityResult)\n\n    console.log(`%cYou rolled a ${this.gunRarityRoll[0]}|${this.gunRarityRoll[1]}: ${gunRarityResult}`, \"color: yellow\");\n\n    //Step 6 - Element\n    if (!!this.currentGun.guild && GUILD_BONUSES[this.currentGun.guild!].elemental != 0 && gunRarityResult.includes('(Element Roll)') || this.currentGun.guild === \"Malefactor\") {\n      console.log('Rolling Gun Element...');\n      this.gunElementRoll = this._Roll(100);\n      if (this.currentGun.guild === \"Malefactor\") {\n        this.currentGun.element = this.setMaliwanElement();\n        console.log(`%cThe Gun's Element is ${this.currentGun.element}`, \"color: yellow\");\n      } else {\n        this.currentGun.element = this.getElement(this.gunElementRoll);\n      }\n    } else {\n      this.currentGun.element = \"N/A\" \n    }\n    \n    //Step 7 - Prefixes\n    console.log(\"Rolling prefix...\");\n    const hasPrefixRoll = this._Roll(100);\n    this.getPrefix(hasPrefixRoll);\n\n    //Add to list of guns generated\n    if (this.gunTypeRoll < 7) {\n      this.gunList.push({...this.currentGun});\n    }\n\n    console.log(`Current Gun:`, this.currentGun)\n    console.groupEnd();\n  }\n  \n\n  consoleLog(data:any) {\n    this.log!.nativeElement.innerHTML += data + \"<br/> <br/>\";\n  }\n\n  clearLog() {\n    this.log!.nativeElement.innerHTML = '';\n  }\n\n  closeDialog() {\n    if (\"NDEFReader\" in window) {\n      this.hasScannedItem = false;\n      this.loadedGun.nativeElement.innerHTML = '';\n      this.controller.abort();\n    }\n    this.dialog.nativeElement.close();\n  }\n\n  getLevel(string: string): number {\n    return parseInt(string);\n  }\n\n  getGuild(type: number, guild: number): string {\n    return GUN_TABLE[type-1][guild-1]\n  }\n\n  getRarity(number: number[]): string {\n    return GUN_RARITIES[GUN_RARTIY_TABLE[number[0]-1][number[1]-1]-1];\n  }\n\n  getElement(number: number): ElementTypes {\n    const elementRollRanges = [0, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 92, 94, 96, 98, 100];\n\n    for (let i = 0; i < elementRollRanges.length - 1; i ++) {\n      if (number > 100) {\n        const element = ELEMENTAL_TABLE[this.convertToRarityType(this.currentGun.rarity)][ELEMENTAL_TABLE[this.convertToRarityType(this.currentGun.rarity)].length - 1]\n        console.log(`%cThe Gun's Element is ${element}`, \"color: yellow\")\n        return element as ElementTypes;\n      }\n\n      if (number > elementRollRanges[i] && this.gunElementRoll <= elementRollRanges[i+1]) {\n        let element = ELEMENTAL_TABLE[this.convertToRarityType(this.currentGun.rarity)][i]\n        console.log(`%cThe Gun's Element is ${element}`, \"color: yellow\")\n        return element as ElementTypes;\n      }      \n    }\n    console.log(`%cThe gun is not elemental`, \"color: yellow\")\n    return \"N/A\"\n  }\n\n  setMaliwanElement(): ElementTypes {\n    const elementRollRanges = [0, 10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 65, 70, 75, 80, 85, 90, 92, 94, 96, 98, 100];\n    let roll = this._Roll(100);\n    let element: ElementTypes = \"N/A\";\n\n    switch(this.currentGun.rarity) {\n      case 'Rare':\n        roll += 10;\n        break;\n      case 'Epic': \n        roll += 15;\n        break;\n      case 'Legendary': \n        roll += 20;\n        break;\n    }\n\n    if (roll > 100) {\n      return ELEMENTAL_TABLE[this.currentGun.rarity][ELEMENTAL_TABLE[this.currentGun.rarity].length-1] as ElementTypes;\n    }\n\n    for (let i = 0; i < elementRollRanges.length - 1; i ++) {\n      if (roll > elementRollRanges[i] && roll <= elementRollRanges[i+1]) {\n        element = ELEMENTAL_TABLE[this.currentGun.rarity][i] as ElementTypes;\n      }\n    }\n\n    if (element !== \"N/A\") {\n      return element;\n    } else {\n      return this.setMaliwanElement();\n    }\n  }\n\n  getPrefix(number: number) {\n    this.gunPrefixRoll = this._Roll(Object.keys(PREFIXES).length);\n    if (this.currentGun.rarity === 'Legendary') {\n      this.gunPrefixRoll = this._Roll(Object.keys(RED_PREFIXES).length);\n      this.currentGun.prefix = Object.keys(RED_PREFIXES)[this.gunPrefixRoll] as RedPrefixTypes;\n    } else if ((this.currentGun.rarity === 'Rare' && number > 75) || (this.currentGun.rarity === 'Epic' && number > 50) || (number > 95)) {\n      this.currentGun.prefix = Object.keys(PREFIXES)[this.gunPrefixRoll] as PrefixTypes;\n    } else {\n      this.currentGun.prefix = undefined;\n    }\n    console.log(`%cYou rolled a ${number}: ${this.currentGun.prefix === undefined ? `Not qualified` : this.currentGun.prefix}`, \"color: yellow\");\n  }\n\n  onSubmit() {\n    const { type, guild } = this.gunForm.value;\n\n    //Set Type and Guild\n    if (this.gunTypeRoll === 7 && this.gunGuildRoll === 8) {\n      this.currentGun.type = \"Rocket Launcher\";\n    } else {\n      this.currentGun.type = type as GunTypes;\n    }\n    this.currentGun.guild = guild as GuildTypes;\n\n    console.log(`%cYou chose a ${this.currentGun.guild} ${this.currentGun.type}`, \"color: yellow\");\n\n    //Run elemental code once guild has been set\n    if (!!this.currentGun.guild && GUILD_BONUSES[this.currentGun.guild].elemental != 0 && this.getRarity(this.gunRarityRoll).includes('(Element Roll)') || this.currentGun.guild === \"Malefactor\") {\n      console.log('Rolling Gun Element...');\n      this.gunElementRoll = this._Roll(100);\n      if (this.currentGun.guild === \"Malefactor\") {\n        this.currentGun.element = this.setMaliwanElement() as ElementTypes;\n      } else {\n        this.currentGun.element = this.getElement(this.gunElementRoll);\n      }\n      console.log(`%cThe Gun's Element is ${this.currentGun.element}`, \"color: yellow\")\n    } else {\n      console.log(`%cThe gun is not elemental`, \"color: yellow\")\n      this.currentGun.element = 'N/A'\n    }\n\n    if (this.currentGun.element === \"N/A\" && this.currentGun.guild === \"Malefactor\") {\n      while(this.currentGun.element === \"N/A\") {\n        this.currentGun.element = this.getElement(this._Roll(100)) as ElementTypes;\n      }\n    }\n    \n    this.gunList.push({...this.currentGun})\n  }\n\n  onSave() {\n    this.hasScannedItem = false;\n    if (\"NDEFReader\" in window) {\n      this.hasScannedItem = false;\n      this.loadedGun.nativeElement.innerHTML = '';\n      this.controller.abort();\n    }\n    this.currentGun = this.stagingGun;\n    this.stagingGun = {} as GunCard;\n    this.gunList.push({...this.currentGun});\n    this.dialog.nativeElement.close();\n    this._cdf.detectChanges();\n  }\n\n  loadGun(event: GunCard) {\n    this.currentGun = {...event};\n  }\n\n  convertToRarityType(rarity:string):RarityTypes {\n    switch(rarity) {\n      case 'Common (Element Roll)': \n        return \"Common\";\n      case 'Uncommon (Element Roll)': \n        return \"Uncommon\";\n      case 'Rare (Element Roll)': \n        return \"Rare\";\n      case 'Epic (Element Roll)': \n        return \"Epic\";\n      case 'Legendary (Element Roll)': \n        return \"Legendary\";\n      default:\n        return rarity as RarityTypes;\n    }\n  }\n\n  async readTag() {\n    this.dialogState = 'read';\n    this.dialog.nativeElement.showModal();\n    this.loadedGun.nativeElement.innerHTML = '';\n    if (\"NDEFReader\" in window) {\n      this.ndef = new NDEFReader();\n      this.controller = new AbortController();\n      const signal = this.controller.signal;\n      try {\n        await this.ndef.scan({signal});\n        this.ndef.onreading = (event: NDEFReadingEvent) => {\n          const decoder = new TextDecoder();\n          for (const record of event.message.records) {\n            // this.consoleLog(\"Record type: \" + record.recordType);\n            // this.consoleLog(\"MIME type: \" + record.mediaType);\n            this.consoleLog(\"Data: \" + decoder.decode(record.data));\n            let gunData = decoder.decode(record.data).split('|');\n            this.level.nativeElement.value = gunData[0];\n            this.stagingGun = {\n              level: parseInt(gunData[0]),\n              type: gunData[1] as GunTypes,\n              guild: gunData[2] as GuildTypes,\n              rarity: gunData[3] as RarityTypes,\n              element: gunData[4] as ElementTypes,\n              prefix: gunData[5] === 'undefined' ? undefined : gunData[5] as PrefixTypes | RedPrefixTypes,\n            }\n            this.consoleLog(`Gun loaded: ${this.stagingGun.level} ${this.stagingGun.type} ${this.stagingGun.guild} ${this.stagingGun.rarity} ${this.stagingGun.element} ${this.stagingGun.prefix}`);\n          }\n          this.hasScannedItem = true;\n          this.loadedGun.nativeElement.innerHTML = `Gun loaded: Level ${this.stagingGun.level} ${this.stagingGun.type} ${this.stagingGun.guild} ${this.stagingGun.rarity} ${this.stagingGun.element} ${this.stagingGun.prefix}`;\n          this._cdf.detectChanges();\n        }\n      } catch (error: any) {\n        this.consoleLog('Error: ' + error);\n      }\n    } else {\n      this.consoleLog(\"Web NFC is not supported.\");\n    }\n  }\n\n  async writeTag() {\n    this.dialogState = 'write';\n    this.dialog.nativeElement.showModal();\n    this.loadedGun.nativeElement.innerHTML = \"\";\n    if (\"NDEFReader\" in window) {\n      const ndef = new NDEFReader();\n      this.controller = new AbortController();\n      const signal = this.controller.signal;\n      try {\n        await ndef.write({ records: [\n          { recordType: 'text', data: `${this.currentGun.level}|${this.currentGun.type}|${this.currentGun.guild}|${this.currentGun.rarity}|${this.currentGun.element}|${this.currentGun.prefix}` as string },\n        ]}, { signal }).then(() => {\n          this.loadedGun.nativeElement.innerHTML = `Saved gun successfully!: Level ${this.currentGun.level} ${this.currentGun.rarity} ${this.currentGun.element !== 'N/A' ? this.currentGun.element: ''} ${this.currentGun.prefix} ${this.currentGun.guild} ${this.currentGun.type}`\n        });\n        this.consoleLog(`Level ${this.currentGun.level} ${this.currentGun.rarity} ${this.currentGun.element !== 'N/A' ? this.currentGun.element: ''} ${this.currentGun.prefix !== undefined ? this.currentGun.prefix : ''} ${this.currentGun.guild} ${this.currentGun.type}`);\n      } catch(error) {\n        this.consoleLog(error);\n      }\n    } else {\n      this.consoleLog(\"Web NFC is not supported.\");\n    }\n  }\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_cdf",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 65,
                "jsdoctags": [
                    {
                        "name": "_cdf",
                        "type": "ChangeDetectorRef",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "accessors": {
                "hasNDEFReader": {
                    "name": "hasNDEFReader",
                    "getSignature": {
                        "name": "hasNDEFReader",
                        "type": "boolean",
                        "returnType": "boolean",
                        "line": 54
                    }
                }
            },
            "templateData": "<main class=\"main\">\n  <h1>{{ title }}</h1>\n  \n  <div *ngIf=\"hasNDEFReader\">\n    <button (click)=\"readTag()\">Load Gun</button>\n    <dialog #dialog>\n      <div>\n        @if (dialogState === 'read') {\n          <h4>Tap your NFC chip to load gun</h4>\n        } @else {\n          <h4>Tap to save your gun to an NFC Chip</h4>\n        }\n        <h3 #loadedGun></h3>\n        <bnb-gun-card *ngIf=\"!!stagingGun\" [level]=\"stagingGun.level\" [type]=\"stagingGun.type\" [guild]=\"stagingGun.guild\" [rarity]=\"stagingGun.rarity\" [element]=\"stagingGun.element\" [prefix]=\"stagingGun.prefix\" id=\"gunCard\"/>\n        <button *ngIf=\"hasScannedItem\" (click)=\"onSave()\"><h4>Save Gun</h4></button>\n        <button (click)=\"closeDialog()\" class=\"close\">X</button>\n      </div>\n    </dialog>\n    <button (click)=\"writeTag()\">Save Gun</button>\n  </div>\n\n  <br><br>\n  <button (click)=\"generateNewGun()\">Generate!</button>\n  <br><br>\n  <label for=\"level\">Level</label>\n  <input id=\"level\" type=\"number\" min=\"1\" max=\"30\" [defaultValue]=\"1\" #level />\n\n  <form [formGroup]=\"gunForm\" (ngSubmit)=\"onSubmit()\" *ngIf=\"gunTypeRoll === 8 || (gunTypeRoll === 7 && gunGuildRoll === 8)\">\n    <p>Select Favored Gun </p>\n    <label for=\"type\">Type</label>\n    <select id=\"type\" #type formControlName=\"type\">\n      <option value=\"Pistol\">Pistol</option>\n      <option value=\"Submachine Gun\">Submachine Gun</option>\n      <option value=\"Shotgun\">Shotgun</option>\n      <option value=\"Combat Rifle\">Combat Rifle</option>\n      <option value=\"Sniper Rifle\">Sniper Rifle</option>\n      <option value=\"Rocket Launcher\">Rocket Launcher</option>\n    </select>\n    <label for=\"guild\">Guild</label>\n    <select id=\"guild\" #guild formControlName=\"guild\">\n      <option value=\"Alas!\">Alas!</option>\n      <option value=\"Skuldugger\">Skuldugger</option>\n      <option value=\"Dahlia\">Dahlia</option>\n      <option value=\"Blackpowder\">Blackpowder</option>\n      <option value=\"Malefactor\">Malefactor</option>\n      <option value=\"Hyperius\">Hyperius</option>\n      <option value=\"Feriore\">Feriore</option>\n      <option value=\"Torgue\">Torgue</option>\n      <option value=\"Stoker\">Stoker</option>\n    </select>\n    <button type=\"submit\">Submit</button>\n  </form>\n  <p>{{ currentGun.level }} {{ currentGun.rarity !== \"Legendary\" ? currentGun.prefix : '' }} {{ currentGun.rarity }} {{ currentGun.guild }} {{ currentGun.type }}</p>\n\n</main>\n\n<bnb-gun-card-v2 [gun]=\"currentGun\"></bnb-gun-card-v2>\n<!-- <bnb-gun-card [level]=\"currentGun.level\" [type]=\"currentGun.type\" [guild]=\"currentGun.guild\" [rarity]=\"currentGun.rarity\" [element]=\"currentGun.element\" [prefix]=\"currentGun.prefix\" id=\"gunCard\"/> -->\n<hr>\n<h2>Loot Pile</h2>\n<bnb-history-list [data]=\"gunList\" (loadGun)=\"loadGun($event)\"/>\n<hr>\n<div *ngIf=\"hasNDEFReader\">\n  <h4>Log</h4>\n  <button (click)=\"clearLog()\">Clear Logs</button>\n  <p id=\"log\" #log></p>\n</div>\n\n\n\n<router-outlet></router-outlet>\n"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-86e2311c54fbca7431c12e070d0fd5b0ebe343eec0553a392f182ba0e04a8f86613233d26ee47718fd0e7a65078f580c76a1fcc928ce55de81193d6618025bc4",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nWhat background color to use\n",
                    "description": "<p>What background color to use</p>\n",
                    "line": 29,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 798,
                            "end": 811,
                            "flags": 16842752,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 334,
                            "tagName": {
                                "pos": 799,
                                "end": 807,
                                "flags": 16842752,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 80,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "\n\nButton contents\n\n",
                    "description": "<p>Button contents</p>\n",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nIs this the principal call to action on the page?\n",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 23,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nHow large should the button be?\n",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 35,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  standalone: true,\n  imports: [CommonModule],\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 51
                    }
                }
            }
        },
        {
            "name": "GunCardComponent",
            "id": "component-GunCardComponent-65434d8d2593826bd79f257e3b076f6d3ca6723db3dfa387f4db02faea6c0c4ead1031e050c1c63192c8fa790f7f9bef8cb5b1b18f2afec9d64b33d9f571f41a",
            "file": "src/app/gun-card/gun-card.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bnb-gun-card",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./gun-card.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "element",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "ElementTypes",
                    "decorators": []
                },
                {
                    "name": "guild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "GuildTypes",
                    "decorators": []
                },
                {
                    "name": "level",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "prefix",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "PrefixTypes | RedPrefixTypes",
                    "decorators": []
                },
                {
                    "name": "rarity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "RarityTypes",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "GunTypes",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "prefixDesc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "methodsClass": [
                {
                    "name": "keepOrder",
                    "args": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "KeyValuePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule, KeyValuePipe } from '@angular/common';\nimport { Component, Input } from '@angular/core';\nimport { GUILD_BONUSES, GUN_TYPE_STATS, PREFIXES, RED_PREFIXES } from '../tables';\nimport { GunTypes, GuildTypes, RarityTypes, RedPrefixTypes } from '../types';\nimport { ElementTypes, PrefixTypes } from '../types';\n\n@Component({\n  selector: 'bnb-gun-card',\n  standalone: true,\n  imports: [CommonModule, KeyValuePipe],\n  templateUrl: './gun-card.component.html',\n  styleUrl: './gun-card.component.scss',\n})\nexport class GunCardComponent {\n  @Input() level!: number;\n  @Input() type!: GunTypes;\n  @Input() guild!: GuildTypes;\n  @Input() rarity!: RarityTypes;\n  @Input() element!: ElementTypes;\n  @Input() prefix!: PrefixTypes | RedPrefixTypes; \n\n  prefixDesc!: string;\n\n  get tier() {\n    return this.level < 7 ? 0\n    : this.level >= 7 && this.level < 13 ? 1 \n    : this.level >= 13 && this.level < 19 ? 2\n    : this.level >= 19 && this.level < 25 ? 3\n    : 4\n  }\n\n  get accuracy() {\n    if (!this.type) { return }\n    return GUN_TYPE_STATS[this.type][\"tier\"][this.tier].accuracy;\n  }\n  \n  get damage() {\n    if (!this.type) { return }\n    return GUN_TYPE_STATS[this.type][\"tier\"][this.tier].damage;\n  }\n\n  get range() {\n    if (!this.type) { return }\n    return GUN_TYPE_STATS[this.type][\"tier\"][this.tier].range;\n  }\n\n  get guildBonus() {\n    if (!this.guild) { return }\n    return GUILD_BONUSES[this.guild][this.rarity];\n  }\n\n  get weaponBonus() {\n    if (!this.type) { return }\n    return GUN_TYPE_STATS[this.type].bonus;\n  }\n\n  get prefixDescription() {\n    if (this.rarity !== 'Legendary') {\n      this.prefix = this.prefix as PrefixTypes;\n      if (!this.prefix) { return }\n      return PREFIXES[this.prefix]\n    } else {\n      this.prefix = this.prefix as RedPrefixTypes;\n      if (!this.prefix) { return }\n      return RED_PREFIXES[this.prefix]\n    }\n  }\n\n  keepOrder(a:any) {\n    return a;\n  }\n}\n",
            "styleUrl": "./gun-card.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "tier": {
                    "name": "tier",
                    "getSignature": {
                        "name": "tier",
                        "type": "",
                        "returnType": "",
                        "line": 24
                    }
                },
                "accuracy": {
                    "name": "accuracy",
                    "getSignature": {
                        "name": "accuracy",
                        "type": "",
                        "returnType": "",
                        "line": 32
                    }
                },
                "damage": {
                    "name": "damage",
                    "getSignature": {
                        "name": "damage",
                        "type": "",
                        "returnType": "",
                        "line": 37
                    }
                },
                "range": {
                    "name": "range",
                    "getSignature": {
                        "name": "range",
                        "type": "",
                        "returnType": "",
                        "line": 42
                    }
                },
                "guildBonus": {
                    "name": "guildBonus",
                    "getSignature": {
                        "name": "guildBonus",
                        "type": "",
                        "returnType": "",
                        "line": 47
                    }
                },
                "weaponBonus": {
                    "name": "weaponBonus",
                    "getSignature": {
                        "name": "weaponBonus",
                        "type": "",
                        "returnType": "",
                        "line": 52
                    }
                },
                "prefixDescription": {
                    "name": "prefixDescription",
                    "getSignature": {
                        "name": "prefixDescription",
                        "type": "",
                        "returnType": "",
                        "line": 57
                    }
                }
            },
            "templateData": "<div class=\"gun-card\">\n    @if (damage !== undefined) {\n        <div class=\"content\">\n            <table>\n                <thead>\n                    <tr>\n                        <th>Accuracy</th>\n                        <th>Hits</th>\n                        <th>Crits</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let acc of accuracy | keyvalue: keepOrder\">\n                        <td>{{ acc.key }}</td>\n                        <td>{{ acc.value.hits }}</td>\n                        <td>{{ acc.value.crits }}</td>\n                    </tr>\n                </tbody>\n            </table>\n            <p>Damage: {{ damage[0] + 'd' + damage[1] }}</p>\n            <p>Range: {{ range }}</p>\n            <p *ngIf=\"!!weaponBonus\">Weapon Bonus: {{ weaponBonus }}</p>\n            <p>Guild Bonus: {{ guildBonus }}</p>\n            <p *ngIf=\"element != 'N/A'\">Element: {{ element }}</p>\n            <p *ngIf=\"!!prefix\">{{ prefix }}: {{ prefixDescription }}</p>\n        </div>\n        <img *ngIf=\"!!type\" src=\"./assets/img/{{ type.split(' ').join('-') | lowercase }}.png\" class=\"image {{ rarity | lowercase }}\"/>\n    }\n</div>"
        },
        {
            "name": "GunCardV2Component",
            "id": "component-GunCardV2Component-ac68dcd8d2cd6a45c1d912cfcefa963de15ed0fddcc67c629a3e1ae421307088b120d58de183cd2e3fc3846e9fe2b8433f03cdbac11f358de28371755bfc3210",
            "file": "src/app/gun-card-v2/gun-card-v2.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bnb-gun-card-v2",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./gun-card-v2.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "gun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "GunCard",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "convertElement",
                    "args": [
                        {
                            "name": "element",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 63,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "keepOrder",
                    "args": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 102,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "a",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "KeyValuePipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule, KeyValuePipe } from '@angular/common';\nimport { GUILD_BONUSES, GUN_TYPE_STATS, PREFIXES, RED_PREFIXES } from '../tables';\nimport { RedPrefixTypes, PrefixTypes } from '../types';\n\nimport { GunCard } from '../types';\n\n@Component({\n  selector: 'bnb-gun-card-v2',\n  standalone: true,\n  imports: [CommonModule, KeyValuePipe],\n  templateUrl: './gun-card-v2.component.html',\n  styleUrl: './gun-card-v2.component.scss'\n})\nexport class GunCardV2Component {\n  @Input() gun!: GunCard;\n\n  get tier() {\n    return this.gun.level < 7 ? 0\n    : this.gun.level >= 7 && this.gun.level < 13 ? 1 \n    : this.gun.level >= 13 && this.gun.level < 19 ? 2\n    : this.gun.level >= 19 && this.gun.level < 25 ? 3\n    : 4\n  }\n\n  get accuracy() {\n    if (!this.gun.type) { return }\n    return GUN_TYPE_STATS[this.gun.type][\"tier\"][this.tier].accuracy;\n  }\n  \n  get damage() {\n    if (!this.gun.type) { return }\n    return GUN_TYPE_STATS[this.gun.type][\"tier\"][this.tier].damage;\n  }\n\n  get range() {\n    if (!this.gun.type) { return }\n    return GUN_TYPE_STATS[this.gun.type][\"tier\"][this.tier].range;\n  }\n\n  get guildBonus() {\n    if (!this.gun.guild) { return }\n    return GUILD_BONUSES[this.gun.guild][this.gun.rarity];\n  }\n\n  get weaponBonus() {\n    if (!this.gun.type) { return }\n    return GUN_TYPE_STATS[this.gun.type].bonus;\n  }\n\n  get prefixDescription() {\n    if (this.gun.rarity !== 'Legendary') {\n      this.gun.prefix = this.gun.prefix as PrefixTypes;\n      if (!this.gun.prefix) { return }\n      return PREFIXES[this.gun.prefix]\n    } else {\n      this.gun.prefix = this.gun.prefix as RedPrefixTypes;\n      if (!this.gun.prefix) { return }\n      return RED_PREFIXES[this.gun.prefix]\n    }\n  }\n\n  convertElement(element: string) {\n    switch(element) {\n      case \"Incendiary (+1d6)\": \n        return \"Incendiary\";\n      case \"Incendiary (+2d6)\": \n        return \"Incendiary\";\n      case \"Shock (+1d6)\": \n        return \"Shock\";\n      case \"Shock (+2d6)\": \n        return \"Shock\";\n      case \"Corrosive (+1d6)\": \n        return \"Corrosive\";\n      case \"Corrosive (+2d6)\": \n        return \"Corrosive\";\n      case \"Cryo (+1d6)\": \n        return \"Cryo\";\n      case \"Cryo (+2d6)\": \n        return \"Cryo\";\n      case \"Radiation (+1d6)\": \n        return \"Radiation\";\n      case \"Radiation (+2d6)\": \n        return \"Radiation\";\n      case \"Explosive (+1d6)\": \n        return \"Explosive\";\n      case \"Explosive (+2d6)\": \n        return \"Explosive\";\n      case \"Shock + Corrosive\":\n        return \"Voltcidic\";\n      case \"Radiation + Incendiary\":\n        return \"Schoradiation\";\n      case \"Explosive + Cryo\":\n        return \"Icesplosion\";\n      case \"N/A\":\n        return '';\n      default:\n        return element;\n    }\n  }\n\n  keepOrder(a:any) {\n    return a;    \n  }\n}\n",
            "styleUrl": "./gun-card-v2.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "accessors": {
                "tier": {
                    "name": "tier",
                    "getSignature": {
                        "name": "tier",
                        "type": "",
                        "returnType": "",
                        "line": 18
                    }
                },
                "accuracy": {
                    "name": "accuracy",
                    "getSignature": {
                        "name": "accuracy",
                        "type": "",
                        "returnType": "",
                        "line": 26
                    }
                },
                "damage": {
                    "name": "damage",
                    "getSignature": {
                        "name": "damage",
                        "type": "",
                        "returnType": "",
                        "line": 31
                    }
                },
                "range": {
                    "name": "range",
                    "getSignature": {
                        "name": "range",
                        "type": "",
                        "returnType": "",
                        "line": 36
                    }
                },
                "guildBonus": {
                    "name": "guildBonus",
                    "getSignature": {
                        "name": "guildBonus",
                        "type": "",
                        "returnType": "",
                        "line": 41
                    }
                },
                "weaponBonus": {
                    "name": "weaponBonus",
                    "getSignature": {
                        "name": "weaponBonus",
                        "type": "",
                        "returnType": "",
                        "line": 46
                    }
                },
                "prefixDescription": {
                    "name": "prefixDescription",
                    "getSignature": {
                        "name": "prefixDescription",
                        "type": "",
                        "returnType": "",
                        "line": 51
                    }
                }
            },
            "templateData": "<div *ngIf=\"!!gun\" class=\"gun-card--container {{ gun.rarity.toLowerCase() }}\">\n    <div class=\"content\">\n        <div [style.grid-area]=\"'name'\" class=\"name\"><h4>{{ gun.guild }} {{ gun.type }}</h4></div>\n        <div [style.grid-area]=\"'stats'\" class=\"stats\">\n            <!-- <div class=\"left\">\n                <p class=\"rarity\">{{ gun.rarity }}</p>\n                <div class=\"type\">\n                    <img *ngIf=\"!!gun.type\" src=\"assets/img/{{ gun.type.split(' ').join('').toLowerCase() }}.webp\"/>\n                </div>\n                <div class=\"element\">\n                    <div>\n                        @if (gun.element === \"N/A\") {\n                            <p>{{ gun.element }}</p>\n                        } @else {\n                            <p>{{ gun.element }}</p>\n                            <img src=\"assets/img/{{ (gun.element.includes('+') ? convertElement(gun.element) : gun.element) | lowercase }}.webp\" width=\"24px\"/>\n                        }\n                    </div>\n                </div>\n            </div> -->\n            <div class=\"right\">\n                <table>\n                    <thead>\n                        <tr>\n                            <th>{{ gun.rarity }}</th>\n                            <th>Accuracy</th>\n                            <th>Roll</th>\n                            <th>Hits</th>\n                            <th>Crits</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        <tr *ngFor=\"let acc of accuracy | keyvalue: keepOrder; index as i\">\n                            <td *ngIf=\"i === 0\" rowspan=\"3\">\n                                <div class=\"type\">\n                                    <img *ngIf=\"!!gun.type\" src=\"assets/img/{{ gun.type.split(' ').join('').toLowerCase() }}.webp\"/>\n                                </div>\n                            </td>\n                            <td *ngIf=\"i === 0\" rowspan=\"3\">\n                                <div>\n                                    <img src=\"assets/img/d20.webp\" class=\"icon\"/>\n                                    <p>+</p>\n                                    <div contenteditable=\"true\" data-attribute=\"Mod\">Mod</div>\n                                </div>\n                            </td>\n                            <td><p>{{ acc.key }}</p></td>\n                            <td class=\"hits\"><p>{{ acc.value.hits }}</p></td>\n                            <td class=\"crits\"><p>{{ acc.value.crits }}</p></td>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr>\n                            <td rowspan=\"2\">\n                                <div class=\"element\">\n                                    @if (gun.element !== \"N/A\") {\n                                        <p>{{ gun.element }}</p>\n                                        <img src=\"assets/img/{{ (gun.element.includes('+') ? convertElement(gun.element) : gun.element) | lowercase }}.webp\" width=\"24px\"/>\n                                    }\n                                </div>\n                            </td>\n                            <th colspan=\"3\">Damage</th>\n                            <th colspan=\"2\">Range</th>\n                        </tr>\n                        <tr>\n                            <td colspan=\"3\" class=\"damage\" *ngIf=\"damage\">\n                                <div>\n                                    <div style=\"display: flex; align-items: center; justify-content: center;\">\n                                        <img class=\"dice icon\" src=\"assets/img/d{{damage[1]}}.webp\"/>\n                                        <p class=\"numDice\"><b>x{{ damage[0] }}</b></p>\n                                    </div>\n                                    <div class=\"hits\">\n                                        <img src=\"assets/img/hits.svg\" class=\"icon\"/>\n                                        <p>PER</p>\n                                    </div>\n                                    <p>+</p>\n                                    <div contenteditable=\"true\">Mod</div>\n                                </div>\n                            </td>\n                            <td colspan=\"2\">\n                                {{ range }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n        <div [style.grid-area]=\"'descriptions'\" class=\"descriptions\">\n            <p>Guild Bonus: {{ guildBonus }}</p>\n            <p *ngIf=\"!!gun.prefix\">{{ gun.prefix }}: {{ prefixDescription }}</p>\n        </div>\n        <div [style.grid-area]=\"'gun-bonus'\" class=\"gun-bonus\">\n            <p *ngIf=\"!!weaponBonus\">Weapon Bonus: {{ weaponBonus }}</p>\n            <div><img *ngIf=\"!!gun.guild\" src=\"assets/img/{{ gun.guild }}.png\" width=\"128px\"/></div>\n        </div>\n    </div>\n</div>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-cad94b233ec8e80ceb541e7972c5f9737e08237b4e137112f3987ca48ee0cce5c0d57798d41daa5d4d24d6bdbb2df1606ab68cca2aa0a1785e38f99f3cac0729",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 78,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 72,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 75,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ButtonComponent } from './button.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  template: `<header>\n    <div class=\"storybook-header\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            [primary]=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\n.storybook-header svg {\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header h1 {\n  font-weight: 700;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-header button + button {\n  margin-left: 10px;\n}\n\n.storybook-header .welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": []
        },
        {
            "name": "HistoryListComponent",
            "id": "component-HistoryListComponent-1445a2f3db9c4f7a08bcc770c84502f4902c93739fe533e3a10d9a4eeb2d2db5c59a73671d32ab483fe6a71d239f06ec89b33cbdb7c57536b7048a087e9b2e15",
            "file": "src/app/history-list/history-list.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bnb-history-list",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./history-list.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "GunCard[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "loadGun",
                    "defaultValue": "new EventEmitter<GunCard>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<GunCard>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "convertElement",
                    "args": [
                        {
                            "name": "element",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "handleLoadGun",
                    "args": [
                        {
                            "name": "item",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "removeItemFromHistory",
                    "args": [
                        {
                            "name": "item",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HistoryListItemComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GunCard } from '../types';\nimport { HistoryListItemComponent } from '../history-list-item/history-list-item.component';\n\n@Component({\n  selector: 'bnb-history-list',\n  standalone: true,\n  imports: [CommonModule, HistoryListItemComponent],\n  templateUrl: './history-list.component.html',\n  styleUrl: './history-list.component.scss'\n})\nexport class HistoryListComponent {\n  @Input() data!: GunCard[];\n\n  @Output() loadGun: EventEmitter<GunCard> = new EventEmitter<GunCard>();\n\n  removeItemFromHistory(item: number) {\n    if (!this.data) { throw new Error(\"No data\") };\n    this.data.splice((this.data.length - item - 1), 1);\n  }\n\n  handleLoadGun(item: number) {\n    this.loadGun.emit(this.data[(this.data.length - item - 1)]);\n    document.getElementById('gunCard')?.scrollIntoView();\n  }\n\n  convertElement(element: string) {\n    switch(element) {\n      case \"Incendiary (+1d6)\": \n        return \"Incendiary\";\n      case \"Incendiary (+2d6)\": \n        return \"Incendiary\";\n      case \"Shock (+1d6)\": \n        return \"Shock\";\n      case \"Shock (+2d6)\": \n        return \"Shock\";\n      case \"Corrosive (+1d6)\": \n        return \"Corrosive\";\n      case \"Corrosive (+2d6)\": \n        return \"Corrosive\";\n      case \"Cryo (+1d6)\": \n        return \"Cryo\";\n      case \"Cryo (+2d6)\": \n        return \"Cryo\";\n      case \"Radiation (+1d6)\": \n        return \"Radiation\";\n      case \"Radiation (+2d6)\": \n        return \"Radiation\";\n      case \"Explosive (+1d6)\": \n        return \"Explosive\";\n      case \"Explosive (+2d6)\": \n        return \"Explosive\";\n      case \"Shock + Corrosive\":\n        return \"Voltcidic\";\n      case \"Radiation + Incendiary\":\n        return \"Schoradiation\";\n      case \"Explosive + Cryo\":\n        return \"Icesplosion\";\n      case \"N/A\":\n        return '';\n      default:\n        return element;\n    }\n  }\n}\n",
            "styleUrl": "./history-list.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"bnb-history-list--container-list\">\n    <div class=\"bnb-history-list--heading\">\n        <p><b>Level</b></p>\n        <p><b>Prefix</b></p>\n        <p><b>Name</b></p>\n        <p><b>Rarity</b></p>\n        <p><b>Type</b></p>\n        <p><b>Guild</b></p>\n        <p><b>Element</b></p>\n    </div>\n    @if (data) {\n        @for(gun of data.slice().reverse();  track i; let i = $index) {\n            <bnb-history-list-item [gun]=\"gun\" (loaded)=\"handleLoadGun(i)\" (removed)=\"removeItemFromHistory(i)\"></bnb-history-list-item>\n        }\n    }\n</div>\n"
        },
        {
            "name": "HistoryListItemComponent",
            "id": "component-HistoryListItemComponent-a55042bc21d69d2870bce032a693d99d78f8d9ab142325b4af9619ed93d98370e2d15a4f28c7922dc15655380e3f9b2abe089ad937167977bf39b9cabc56c9f7",
            "file": "src/app/history-list-item/history-list-item.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "bnb-history-list-item",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./history-list-item.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "gun",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "GunCard",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "loaded",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter<MouseEvent>"
                },
                {
                    "name": "removed",
                    "defaultValue": "new EventEmitter<MouseEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter<MouseEvent>"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "convertElement",
                    "args": [
                        {
                            "name": "element",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "element",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onLoaded",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "onRemove",
                    "args": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "MouseEvent",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, EventEmitter, Input, Output } from '@angular/core';\nimport { GunCard } from '../types';\n\n@Component({\n  selector: 'bnb-history-list-item',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './history-list-item.component.html',\n  styleUrl: './history-list-item.component.scss'\n})\nexport class HistoryListItemComponent {\n  @Input() gun!: GunCard;\n\n  @Output() loaded: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n  @Output() removed: EventEmitter<MouseEvent> = new EventEmitter<MouseEvent>();\n\n  onLoaded(event: MouseEvent) {\n    this.loaded.emit(event)\n  }\n\n  onRemove(event: MouseEvent) {\n    this.removed.emit(event)\n  }\n\n  convertElement(element: string) {\n    switch(element) {\n      case \"Incendiary (+1d6)\": \n        return \"Incendiary\";\n      case \"Incendiary (+2d6)\": \n        return \"Incendiary\";\n      case \"Shock (+1d6)\": \n        return \"Shock\";\n      case \"Shock (+2d6)\": \n        return \"Shock\";\n      case \"Corrosive (+1d6)\": \n        return \"Corrosive\";\n      case \"Corrosive (+2d6)\": \n        return \"Corrosive\";\n      case \"Cryo (+1d6)\": \n        return \"Cryo\";\n      case \"Cryo (+2d6)\": \n        return \"Cryo\";\n      case \"Radiation (+1d6)\": \n        return \"Radiation\";\n      case \"Radiation (+2d6)\": \n        return \"Radiation\";\n      case \"Explosive (+1d6)\": \n        return \"Explosive\";\n      case \"Explosive (+2d6)\": \n        return \"Explosive\";\n      case \"Shock + Corrosive\":\n        return \"Voltcidic\";\n      case \"Radiation + Incendiary\":\n        return \"Schoradiation\";\n      case \"Explosive + Cryo\":\n        return \"Icesplosion\";\n      case \"N/A\":\n        return '';\n      default:\n        return element;\n    }\n  }\n}\n",
            "styleUrl": "./history-list-item.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div *ngIf=\"!!gun\" class=\"bnb-history-list-item row {{gun.rarity | lowercase }} selected\" #item (dblclick)=\"onLoaded($event)\">\n    <p>{{ gun.level }}</p>\n    <p>{{ gun.prefix }}</p>\n    <p>{{ convertElement(gun.element) }} {{ gun.prefix }} {{ gun.guild }} {{ gun.type }}</p>\n    <p>{{ gun.rarity }}</p>\n    <p>{{ gun.type }}</p>\n    <p>{{ gun.guild }}</p>\n    @if (gun.element === \"N/A\") {\n        <p>{{ gun.element }}</p>\n    } @else {\n        <div [style.display]=\"'flex'\" style=\"display: flex; align-items: center;\">\n            <img src=\"./assets/img/{{ (gun.element.includes('+') ? convertElement(gun.element) : gun.element) | lowercase }}.webp\" width=\"24px\"/>\n            <p [style.margin]=\"0\">+1d6</p>\n        </div>\n    }\n    <div class=\"buttons\">\n        <button (click)=\"onLoaded($event)\"><i class=\"fa-solid fa-magnifying-glass\"></i></button>\n        <button (click)=\"onRemove($event)\" class=\"remove\"><i class=\"fa-solid fa-trash\"></i></button>\n    </div>\n</div>\n<div *ngIf=\"!!gun\" class=\"card {{gun.rarity | lowercase}}\">\n    <div class=\"card-details {{gun.rarity | lowercase}}\" [style.grid-area]=\"'details'\">\n        <p class=\"level\" [style.grid-area]=\"'level'\">level: {{ gun.level }}</p>\n        <h3 class=\"name\" [style.grid-area]=\"'name'\">{{ convertElement(gun.element) }} {{ gun.prefix }} {{ gun.guild }} {{ gun.type }}</h3>\n        <p class=\"guild\" [style.grid-area]=\"'guild'\">{{ gun.guild }}</p>\n        <p class=\"element\" [style.grid-area]=\"'element'\">{{ gun.element }}</p>\n        <p class=\"type\" [style.grid-area]=\"'type'\">{{ gun.type }}</p>\n    </div>\n    <div class=\"card-actions\" [style.grid-area]=\"'actions'\">\n        <button (click)=\"onLoaded($event)\"><i class=\"fa-solid fa-magnifying-glass\"></i> Inspect</button>\n        <button (click)=\"onRemove($event)\" class=\"remove\"><i class=\"fa-solid fa-trash\"></i> Trash</button>\n    </div>\n</div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-d32b0f19628254ea3fc5526c4d4564ada1cc83cf936759006d90a46f5874b02a3359e331bddda20b22e74a616a6443c660602ba74dd38ebe1160759e0de6f7ba",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 69
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 75,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header.component';\nimport type { User } from './user';\n\n@Component({\n  selector: 'storybook-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section class=\"storybook-page\">\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-page {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\n.storybook-page h2 {\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\n.storybook-page p {\n  margin: 1em 0;\n}\n\n.storybook-page a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\n.storybook-page ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\n.storybook-page li {\n  margin-bottom: 8px;\n}\n\n.storybook-page .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.storybook-page .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.storybook-page .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.storybook-page .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": []
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideRouter(routes)]\n}"
            },
            {
                "name": "ELEMENTAL_TABLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    Common: [\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n    ],\r\n    Uncommon: [\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n    ],\r\n    Rare: [\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n        \"Radiation (+2d6)\",\r\n        \"Corrosive (+2d6)\",\r\n        \"Shock (+2d6)\",\r\n        \"Explosive (+2d6)\",\r\n        \"Incendiary (+2d6)\",\r\n        \"Cryo (+2d6)\",\r\n    ],\r\n    Epic: [\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n        \"Radiation (+2d6)\",\r\n        \"Corrosive (+2d6)\",\r\n        \"Shock (+2d6)\",\r\n        \"Explosive (+2d6)\",\r\n        \"Incendiary (+2d6)\",\r\n        \"Cryo (+2d6)\",\r\n        \"Radiation + Incendiary\",\r\n        \"Shock + Corrosive\",\r\n        \"Explosive + Cryo\",\r\n    ],\r\n    Legendary: [\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n        \"Radiation (+2d6)\",\r\n        \"Corrosive (+2d6)\",\r\n        \"Shock (+2d6)\",\r\n        \"Explosive (+2d6)\",\r\n        \"Incendiary (+2d6)\",\r\n        \"Cryo (+2d6)\",\r\n        \"Radiation + Incendiary\",\r\n        \"Shock + Corrosive\",\r\n        \"Explosive + Cryo\",\r\n    ],\r\n}"
            },
            {
                "name": "GUILD_BONUSES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    \"Alas!\": {\r\n        Common: \"+1 DMG Mod\",\r\n        Uncommon: \"+2 DMG Mod\",\r\n        Rare: \"+3 DMG Mod\",\r\n        Epic: \"+3 DMG Mod\",\r\n        Legendary: \"+4 DMG Mod\",\r\n        elemental: 0,\r\n    },\r\n    \"Skuldugger\": {\r\n        Common: \"+2 DMG Mod, Overheat 1d4\",\r\n        Uncommon: \"+3 DMG Mod, Overheat 1d6\",\r\n        Rare: \"+4 DMG Mod, Overheat 1d8\",\r\n        Epic: \"+5 DMG Mod, Overheat 1d10\",\r\n        Legendary: \"+6 DMG Mod, Overheat 1d12\",\r\n        elemental: 1,\r\n    },\r\n    \"Dahlia\": {\r\n        Common: \"Burst: +1 Hit\",\r\n        Uncommon: \"Burst: +1 Hit, +1 ACC Mod\",\r\n        Rare: \"Burst: +1 Hit, +2 ACC Mod\",\r\n        Epic: \"Burst: +1 Hit, +3 ACC Mod\",\r\n        Legendary: \"Burst: +1 Hit, +4 ACC Mod\",\r\n        elemental: 1,\r\n    },\r\n    \"Blackpowder\": {\r\n        Common: \"+2 ACC Mod: +2 Crit Damage\",\r\n        Uncommon: \"+2 ACC Mod: +3 Crit Damage\",\r\n        Rare: \"+2 ACC Mod: +4 Crit Damage\",\r\n        Epic: \"+2 ACC Mod: +5 Crit Damage\",\r\n        Legendary: \"+2 ACC Mod: +6 Crit Damage\",\r\n        elemental: 0,\r\n    },\r\n    \"Malefactor\": {\r\n        Common: \"Elemental Roll, -2 DMG Mod\",\r\n        Uncommon: \"Elemental Roll, -2 DMG Mod\",\r\n        Rare: \"+10% Elemental Roll\",\r\n        Epic: \"+15% Elemental Roll\",\r\n        Legendary: \"+20% Elemental Roll\",\r\n        elemental: 2,\r\n    },\r\n    \"Hyperius\": {\r\n        Common: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Uncommon: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Rare: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Epic: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Legendary: \"+1 ACC Mod, -2 DMG Mod\",\r\n        elemental: 1,\r\n    },\r\n    \"Feriore\": {\r\n        Common: \"Swap/Reload: 1d4 Grenade Damage, -3 ACC Mod\",\r\n        Uncommon: \"Swap/Reload: 1d6 Grenade Damage, -3 ACC Mod\",\r\n        Rare: \"Swap/Reload: 1d8 Grenade Damage, -2 ACC Mod\",\r\n        Epic: \"Swap/Reload: 1d10 Grenade Damage, -2 ACC Mod\",\r\n        Legendary: \"Swap/Reload: 1d12 Grenade Damage, -1 ACC Mod\",\r\n        elemental: 1,\r\n    },\r\n    \"Torgue\": {\r\n        Common: \"Splash, -4 ACC Mod\",\r\n        Uncommon: \"Splash, -3 ACC Mod\",\r\n        Rare: \"Splash, -2 ACC Mod\",\r\n        Epic: \"Splash, -1 ACC Mod\",\r\n        Legendary: \"Splash\",\r\n        elemental: 1,\r\n    },\r\n    \"Stoker\": {\r\n        Common: \"Extra Attack, -3 ACC Mod\",\r\n        Uncommon: \"Extra Attack, -2 ACC Mod\",\r\n        Rare: \"Extra Attack, -1 ACC Mod\",\r\n        Epic: \"Extra Attack\",\r\n        Legendary: \"Extra Attack, Extra Movement\",\r\n        elemental: 1,\r\n    },\r\n}"
            },
            {
                "name": "GUN_GUILDS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    'Alas!',\r\n    'Skuldugger',\r\n    'Feriore',\r\n    'Dahlia',\r\n    'Blackpowder',\r\n    'Malefactor',\r\n    'Stoker',\r\n    'Hyperius',\r\n    'Torgue',\r\n]"
            },
            {
                "name": "GUN_RARITIES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    'Common',\r\n    'Common (Element Roll)',\r\n    'Uncommon',\r\n    'Uncommon (Element Roll)',\r\n    'Rare',\r\n    'Rare (Element Roll)',\r\n    'Epic',\r\n    'Epic (Element Roll)',\r\n    'Legendary',\r\n    'Legendary (Element Roll)',\r\n]"
            },
            {
                "name": "GUN_RARTIY_TABLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    [1,2,2,3,4,5],\r\n    [1,2,3,4,6,7],\r\n    [4,5,6,7,8,10],\r\n    [6,6,8,8,10,10]\r\n]"
            },
            {
                "name": "GUN_TABLE",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    [\"Skuldugger\", \"Feriore\", \"Dahlia\", \"Blackpowder\", \"Alas!\", \"Malefactor\", \"Stoker\", \"Hyperius\"],\r\n    [\"Malefactor\", \"Skuldugger\", \"Hyperius\", \"Feriore\", \"Torgue\", \"Dahlia\", \"Skuldugger\", \"Feriore\"],\r\n    [\"Hyperius\", \"Blackpowder\", \"Skuldugger\", \"Feriore\", \"Torgue\", \"Stoker\", \"Alas!\", \"Malefactor\"],\r\n    [\"Feriore\", \"Dahlia\", \"Torgue\", \"Stoker\", \"Hyperius\", \"Alas!\", \"Dahlia\", \"Alas!\"],\r\n    [\"Skuldugger\", \"Alas!\", \"Blackpowder\", \"Malefactor\", \"Dahlia\", \"Hyperius\", \"Stoker\", \"Torgue\"],\r\n    [\"Stoker\", \"Torgue\", \"Malefactor\", \"Hyperius\", \"Stoker\", \"Torgue\", \"Malefactor\", \"Hyperius\"],\r\n    [\"Torgue\", \"Dahlia\", \"Blackpowder\", \"Skuldugger\", \"Blackpowder\", \"Feriore\", \"Blackpowder\", \"Any\"],\r\n]"
            },
            {
                "name": "GUN_TYPE_RESULTS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\r\n    \"Pistol\",\r\n    \"Submachine Gun\",\r\n    \"Shotgun\",\r\n    \"Combat Rifle\",\r\n    \"Sniper Rifle\",\r\n    \"Rocket Launcher\",\r\n    \"You rolled a 7\",\r\n    \"Favored Gun\"\r\n]"
            },
            {
                "name": "GUN_TYPE_STATS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    \"Pistol\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 3, crits: 0 },\r\n                },\r\n                damage: [2,4],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 3, crits: 1 },\r\n                },\r\n                damage: [1,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [2,8],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [2,8],\r\n                range: 5,\r\n            },\r\n        ],\r\n        bonus: '',\r\n    },\r\n    \"Submachine Gun\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 0 },\r\n                    \"16+\": { hits: 5, crits: 0 },\r\n                },\r\n                damage: [1,4],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 4, crits: 0 },\r\n                    \"16+\": { hits: 5, crits: 1 },\r\n                },\r\n                damage: [2,4],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 1 },\r\n                    \"16+\": { hits: 5, crits: 1 },\r\n                },\r\n                damage: [1,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 4, crits: 1 },\r\n                },\r\n                damage: [2,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 2 },\r\n                    \"8-15\": { hits: 3, crits: 2 },\r\n                    \"16+\": { hits: 5, crits: 2 },\r\n                },\r\n                damage: [1,10],\r\n                range: 5,\r\n            },\r\n        ],\r\n        bonus: '' \r\n    },\r\n    \"Shotgun\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,8],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,8],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,8],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,10],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,12],\r\n                range: 4,\r\n            },\r\n        ],\r\n        bonus: 'If Range 2 or Less: +2 Damage'\r\n    },\r\n    \"Combat Rifle\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 0 },\r\n                    \"16+\": { hits: 3, crits: 1 },\r\n                },\r\n                damage: [1,6],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [1,8],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,8],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 3, crits: 1 },\r\n                },\r\n                damage: [2,6],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 3 },\r\n                },\r\n                damage: [1,10],\r\n                range: 6,\r\n            },\r\n        ],\r\n        bonus: ''\r\n    },\r\n    \"Sniper Rifle\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 0, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,10],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 0, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,12],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [1,10],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [2,10],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,12],\r\n                range: 8,\r\n            },\r\n        ],\r\n        bonus: 'If range 3+: +3 Accuracy'\r\n    },\r\n    \"Rocket Launcher\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,12],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [2,10],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [1,12],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,12],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [1,20],\r\n                range: 4,\r\n            },\r\n        ],\r\n        bonus: 'Splash'\r\n    },\r\n}"
            },
            {
                "name": "PREFIXES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    \"Aback\": \"Enemies Hit in the front are spun backwards\",\r\n    \"Aberrant\": \"Gains the stats of a random gun type\",\r\n    \"Abhorrent\": \"Enemies cannot stay within 1 square while this gun is equipped\",\r\n    \"Abiding\": \"Grants +1 to all Search Checks while equipped\",\r\n    \"Abrasive\": \"Adds +1 Crit to Melee Attacks\",\r\n    \"Actually\": \"Can reroll Accuracy once per turn when firing this gun\",\r\n    \"Adhesive\": \"Enemies Hit begin to stick to anything they come into contact with\",\r\n    \"Adorable\": \"25% chance to distract Enemies with baby animal hallucinations\",\r\n    \"Bitter\": \"Enemies get -1 to their Attack Rolls for each Enemy killed by this gun in this encounter\",\r\n    \"Boundless\": \"Generates a Loot Pile when it Hits an Enemy\",\r\n    \"Breezy\": \"Enemies targeted are struck by a gust of wind that pushes them 1 square backwards\",\r\n    \"Certain\": \"Grants a +2 bonus during Badass attempts\",\r\n    \"Cheerful\": \"Grants +1 to all Talk Checks while equipped\",\r\n    \"Classy\": \"Gun will only fire if the wielder has the pinky of their hand shooting out\",\r\n    \"Clever\": \"Grants +1 to all Insight Checks while equipped\",\r\n    \"Critical\": \"Rolled hits become Crits. Rolled Crits become misses\",\r\n    \"Damp\": \"Creates puddles of water under Enemies Hit\",\r\n    \"Deafening\": \"Screams when fired, dealing 1 Damage to all adjacent targets\",\r\n    \"Disgusted\": \"Deals +1d6 Corrosive Damage. Enemies killed die badly\",\r\n    \"Eatable\": \"Can consume the gun when Reloading to gain 2d4 Health\",\r\n    \"Economic\": \"Enemies drop 2 gold per Hit and 5 gold per Crit\",\r\n    \"Elfin\": \"Increases Movement by 1 square while firing\",\r\n    \"Exciting\": \"50% chance for Explosive rounds\",\r\n    \"Far-Flung\": \"Double the Range of any Thrown item while this gun is equipped\",\r\n    \"Far\": \"Double the Range of this gun\",\r\n    \"Few\": \"Max 1 Hit. Deal an additional 3 damage for each unused Hit\",\r\n    \"Fresh\": \"First Attack of an encounter deals 2x Damage\",\r\n    \"Frightening\": \"Enemies within 2 squares are compelled to take Cover\",\r\n    \"Gaudy\": \"Highly reflective, which can be used to temporarily blind Enemies, giving them -3 on Attack Rolls\",\r\n    \"Grey\": \"Deals 2x Damage. Enemies Hit drop 1 less Loot Pile and only drop Common items\",\r\n    \"Grotesque\": \"Gun looks horrific, possibly cursed. A counter increases every time it kills an Enemy\",\r\n    \"Handsomely\": \"Add Damage equal to your Talk modifier\",\r\n    \"Holistic\": \"Damage is dealt to Shield Armor, and Health\",\r\n    \"Honorable\": \"All rounds Hit Enemies in the front\",\r\n    \"Horrible\": \"Enemies killed by this gun explode\",\r\n    \"Humdrum\": \"Enemies Hit experience ennui\",\r\n    \"Hysterical\": \"Enemies Hit burst out laughing. cause -1 to Attack Rolls\",\r\n    \"Imaginary\": \"Appears as if you are not holding any gun. Makes fake firing noises when fired\",\r\n    \"Imminent\": \"Enemies Hit take increasing Damage each turn. Damage starts at 1 and increases by 1 with each Hit/turn\",\r\n    \"Impolite\": \"Randomly burps out a Loot Pile when fired\",\r\n    \"Incandescent\": \"Shines brighter when being fired\",\r\n    \"Jazzy\": \"10% chance the non-Boss Enemy lets go of any weapons and starts doing 'jazz hands'\",\r\n    \"Joyous\": \"Plays upbeat music when being fired\",\r\n    \"Jumbled\": \"Has the Accuracy and Damage of one gun type, but the Range and bonuses of another\",\r\n    \"Knotty\": \"Ties an Enemy's shoes together, reducing their Movement by 1\",\r\n    \"Knowing\": \"Knows all. Can ask the gun a question once per day\",\r\n    \"Labored\": \"Adds +3 DMG Mod if standing still\",\r\n    \"Legal\": \"Enemies Hit are considered to be under a legally binding contract to drop 1 extra Loot Pile when they die\",\r\n    \"Light\": \"Fires rays of light that deal +1d6 Incendiary Damage\",\r\n    \"Lively\": \"This gun has an AI that thinks it's alive. It can open any door once per day\",\r\n    \"Mad\": \"Enemies Hit have a 50% chance of being Taunted\",\r\n    \"Madly\": \"Enemies Hit have 50% chance of becoming Confused\",\r\n    \"Mixed\": \"For each Hit/Crit, gather the next die for Damage. d6, d8, d10, d12, d20\",\r\n    \"Mundane\": \"Grants +1 to all Sneak Checks while equipped\",\r\n    \"Normal\": \"Appearance of a Common gun\",\r\n    \"Nutty\": \"Instantly kills any Enemy with a nut allergy\",\r\n    \"Obnoxious\": \"Guaranteed Insight Check once per day at the cost of having to listen to the gun drone on and on and on\",\r\n    \"Obtainable\": \"Must be picked up using an Interact (17+) Check. Deals 2x Damage\",\r\n    \"One\": \"Can only be fired once per day\",\r\n    \"Open\": \"Once per turn, you may Reload this gun as a free Action without generating Mayhem\",\r\n    \"Overconfident\": \"If Accuracy Roll is 10 or less, all Hits are Crits\",\r\n    \"Panoramic\": \"Fires in a 180 degree arc. Hits/Crits can each be applied to a different enemy in Range\",\r\n    \"Parallel\": \"Rounds split into 2 parellel lines that can Hit Enemies in 2 adjacent squares\",\r\n    \"Practical\": \"Swapping to a different gun grants the wielder a Badass Token\",\r\n    \"Pumped\": \"Lifts Enemies Hit a foot off the ground\",\r\n    \"Puny\": \"Appearance of a miniature gun\",\r\n    \"Questionable\": \"Deals 2x Damage to Enemies that can question their existence\",\r\n    \"Relevant\": \"Will deliver cryptic information on a topic up to 3x a day\",\r\n    \"Resolute\": \"Cannot be fired on the first turn of an encounter. Deals 2x Damage\",\r\n    \"Same\": \"Enemies Hit will take an equal amount of Damage from the gun for each Attack\",\r\n    \"Scintillating\": \"50% chance to Hit the chest or groin of Enemy\",\r\n    \"Selfish\": \"Deals 1d6 Damage to wielder when changing to another equipped gun\",\r\n    \"Several\": \"Splits into 2 guns that are dual wielded\",\r\n    \"Shaky\": \"Gun shakes uncontrollably. Enemies Hit also shake uncontrollably\",\r\n    \"Sleepy\": \"Enemies Hit are Slowed\",\r\n    \"Small\": \"Can have a 4th gun equipped as long as this gun is equipped\",\r\n    \"Smelly\": \"Enemies Hit take 1d6 Radiation Damage\",\r\n    \"Splendid\": \"Deals 2x Damage to Badass-type Enemies\",\r\n    \"Strong\": \"Grants +1 to all Interact Checks while equipped\",\r\n    \"Stupendous\": \"Double the Hits of this gun. Attacks deal 2d4 Damage to the wielder\",\r\n    \"Suitable\": \"Can disguise the wielder in a suit of any kind once per day\",\r\n    \"Superb\": \"Grants +1 to Mods on the gun\",\r\n    \"Swift\": \"Grants a free Melee Attack each turn\",\r\n    \"Synonymous\": \"Grants Guild bonuses twice\",\r\n    \"Tart\": \"Enemies react as if they have eaten something tart, getting -1 to their next Attack Roll\",\r\n    \"Tawdry\": \"When Reloaded, becomes a grenade that deals 3d8 Damage\",\r\n    \"Tender\": \"Converts 10% of Damage dealt into Health for an adjacent ally\",\r\n    \"Tense\": \"30% chance to taze the Enemy, dealing 1d6 Shock Damage\",\r\n    \"Thirsty\": \"Converts 10% of Damage dealt into Health\",\r\n    \"Toothsome\": \"Gets a Bite Attack each turn for 1d6 Damage to an adjacent target\",\r\n    \"Towering\": \"Wielder appears twice their size while gun is equipped\",\r\n    \"Two\": \"Creates a duplicate gun. Must be fired at the same time. 3x Damage\",\r\n    \"Unable\": \"Enemies hit cannot take Mayhem Actions\",\r\n    \"Unfair\": \"An Extra Attack with this gun does not generate Mayhem\",\r\n    \"Unwieldy\": \"Twice the size of a normal gun. 2x Damage. Reloading takes 2 turns\",\r\n    \"Utter\": \"There is a secret password that activates 3x Damage for the next 2 turns. Wielder can guess once per encounter\",\r\n    \"Woozy\": \"Each time an Enemy is Hit by this gun, 10% chance they pass out\",\r\n    \"Worried\": \"Crits have a 50% chance to make BR 8 or less Enemies flee\",\r\n    \"Wrathful\": \"Deals 2x Damage to Enemies that have Damaged the wielder\",\r\n    \"Zesty\": \"Enemies killed by this gun grant the wielder 1 Badass Token\"\r\n  }"
            },
            {
                "name": "RED_PREFIXES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/tables.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n    \"POP POP!\": 'Deals Crit Damage twice',\r\n    \"I never freeze\": 'Adds Cryo Element Type',\r\n    \"Toasty!\": 'Adds Incendiary Element type',\r\n    \"Was he slow?\": 'Fires backwards',\r\n    \"We Hate You, Please Die.\": 'Taunts the farthest Enemy each turn.',\r\n    \"Tell them they're next\": \"Won\\'t deal Damage to the final Enemy in an encounter\",\r\n    \"PAN SHOT!\": 'Always Hits the closest Enemy',\r\n    \"Envision Wyverns\": 'Adds Radiation Element type',\r\n    \"I'm melting!\": 'Adds Corrosive Element type',\r\n    \"The same thing that happens to everything else\": 'Adds Shock Element type',\r\n    \"360 quickscope\": 'Adds a Crit to each Ranged Attack',\r\n    \"Any Questions!\": 'Shoots pumpkin bombs that deal an extra 3d6 Explosive Damage.',\r\n    \"Blood and Thunder\": 'Take 1d6 Health Damage to deal +3d6 Shock Damage',\r\n    \"SI VIS PACEM, PARA BELLUM\": 'Gain Extra Attack if Acting Before Enemies',\r\n    \"You're breathtaking!\": 'Wielder cannot be targeted on the first turn of an encounter',\r\n    \"Pass turn.\": 'Wielder may Throw a grenade during the End of Turn step',\r\n    \"I am Vengeance!\": 'Deals 2x Damage to Enemies adjacent to allies',\r\n    \"Roll the dice\": 'If Accuracy Roll is even, 2x Damage. If Accuracy Roll is odd, half Damage',\r\n    \"One among the fence\": 'Add 21 Damage if you roll 13+ on your Accuracy Roll. (1/day)',\r\n    \"Don't be sorry. Be better.\": 'Reroll the Badass Die once per day',\r\n    \"THE PICKLES!\": 'Shoots flaming cheeseburgers that deal an extra 2d6 Incendiary Damage',\r\n    \"Do a kickflip!\": '+4 on Traverse Checks while equipped',\r\n    \"Extinction is the Rule\": 'Teleport to any square up to 4 away when you kill an Enemy',\r\n    \"Never Fight a Knight with a Perm\": 'DMG Mod +6 against non-human Enemies.',\r\n    \"Bye bye, little Butt Stallion\": 'Shots explode into rainbows that deal an extra 1d8 Damage',\r\n    \"Time 2 Hack\": '+4 in Interact Checks and Melee Damage while equipped',\r\n    \"Hate Magic... so much\": '+3 DMG Mod. Take 2d6 Vomit Damage if Reloaded',\r\n    \"OFF WITH THEIR HEADS!\": \"Roll %s. 95%+: the Enemy's head falls off\",\r\n    \"This is my BOOMSTICK!\": 'Deals 3x Damage to skeletons',\r\n    \"Super easy, barely an inconvenience\": 'Automatically pass the first Check each day',\r\n    \"Hold onto your butts.\": 'When fired, the wielder and targets Hit are Knocked Back 2 squares',\r\n    \"The Wise Man's Fear\": 'Deals 3x Damage to all wizards',\r\n    \"I don't want this isolation\": \"Won't fire unless adjacent to an ally or target\",\r\n    \"TUFF with two Fs\": 'Prevents the first 5 Health Damage each turn',\r\n    \"Unlikely Maths\": 'Roll an extra die of each type rolled during an Attack and take the highest result(s)',\r\n    \"Gravity's Rainbow\": 'First Attack against a Badass target always deals max Damage',\r\n    \"Let's do this one last time...\": \"Shoots webs that reduce the target's movement to 0 for 1 turn\",\r\n    \"BIP!\": 'Once per encounter, the wielder can run into squares with an Enemy, Knocking them back 1 square',\r\n    \"The Heaviest Matter of the Universe\": 'The wielder and targets Hit cannot take Movement Actions while equipped',\r\n    \"GREEN FLAME\": 'Shoots burst of green flames while firing, dealing 2d6 Incendiary Damage to adjacent targets',\r\n    \"More like Bore Ragnarok!\": 'Gain 1 Badass Token after a successful Talk Check while equipped',\r\n    \"That's levitation, Holmes!\": 'Ignore difficult terrain while equipped',\r\n    \"Let's boo-boo.\": 'Gain Extra Movement after drinking a potion while equipped',\r\n    \"Mmm Watcha Say...\": 'Gain a Ranged Attack if an Enemy is talking before an encounter',\r\n    \"Here Comes the FunCooker\": 'When this gun scores a Crit, the Enemy suffers a miniature combustion, dealing 1d12 Explosive Damage to itself and all adjacent squares',\r\n    \"Overwhelming strength is boring.\": '-6 Initiative. The first non-Badass, non-boss Enemy that is Melee Attacked dies instantly (1/day)',\r\n    \"Stop talking, I will win. It's what heroes do.\": 'Gun fires explosives that deal +3d6 Damage to all adjacent squares',\r\n    \"Richer and cleverer than everyone else!\": 'Add 10 gold per Loot Pile when rolling for Enemy Drops',\r\n    \"METAL WILL DESTROY ALL EVIL!\": 'Allies get +2 ACC Mod each turn you perform a Melee Attack',\r\n    \"Life is conundrum of esoterica\": 'Gain 2 Badass Tokens for the first time you roll a Trauma each day',\r\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "ElementTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Incendiary\" | \"Incendiary (+1d6)\" | \"Incendiary (+2d6)\" | \"Shock\" | \"Shock (+1d6)\" | \"Shock (+2d6)\" | \"Corrosive\" | \"Corrosive (+1d6)\" | \"Corrosive (+2d6)\" | \"Cryo\" | \"Cryo (+1d6)\" | \"Cryo (+2d6)\" | \"Explosive\" | \"Explosive (+1d6)\" | \"Explosive (+2d6)\" | \"Radiation\" | \"Radiation (+1d6)\" | \"Radiation (+2d6)\" | \"Radiation + Incendiary\" | \"Shock + Corrosive\" | \"Explosive + Cryo\" | \"N/A\"",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "GuildTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Alas!\" | \"Skuldugger\" | \"Dahlia\" | \"Blackpowder\" | \"Malefactor\" | \"Hyperius\" | \"Feriore\" | \"Torgue\" | \"Stoker\" | undefined",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "GunTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Pistol\" | \"Submachine Gun\" | \"Shotgun\" | \"Combat Rifle\" | \"Sniper Rifle\" | \"Rocket Launcher\" | undefined",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "PrefixTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Aback\" | \"Aberrant\" | \"Abhorrent\" | \"Abiding\" | \"Abrasive\" | \"Actually\" | \"Adhesive\" | \"Adorable\" | \"Bitter\" | \"Boundless\" | \"Breezy\" | \"Certain\" | \"Cheerful\" | \"Classy\" | \"Clever\" | \"Critical\" | \"Damp\" | \"Deafening\" | \"Disgusted\" | \"Eatable\" | \"Economic\" | \"Elfin\" | \"Exciting\" | \"Far-Flung\" | \"Far\" | \"Few\" | \"Fresh\" | \"Frightening\" | \"Gaudy\" | \"Grey\" | \"Grotesque\" | \"Handsomely\" | \"Holistic\" | \"Honorable\" | \"Horrible\" | \"Humdrum\" | \"Hysterical\" | \"Imaginary\" | \"Imminent\" | \"Impolite\" | \"Incandescent\" | \"Jazzy\" | \"Joyous\" | \"Jumbled\" | \"Knotty\" | \"Knowing\" | \"Labored\" | \"Legal\" | \"Light\" | \"Lively\" | \"Mad\" | \"Madly\" | \"Mixed\" | \"Mundane\" | \"Normal\" | \"Nutty\" | \"Obnoxious\" | \"Obtainable\" | \"One\" | \"Open\" | \"Overconfident\" | \"Panoramic\" | \"Parallel\" | \"Practical\" | \"Pumped\" | \"Puny\" | \"Questionable\" | \"Relevant\" | \"Resolute\" | \"Same\" | \"Scintillating\" | \"Selfish\" | \"Several\" | \"Shaky\" | \"Sleepy\" | \"Small\" | \"Smelly\" | \"Splendid\" | \"Strong\" | \"Stupendous\" | \"Suitable\" | \"Superb\" | \"Swift\" | \"Synonymous\" | \"Tart\" | \"Tawdry\" | \"Tender\" | \"Tense\" | \"Thirsty\" | \"Toothsome\" | \"Towering\" | \"Two\" | \"Unable\" | \"Unfair\" | \"Unwieldy\" | \"Utter\" | \"Woozy\" | \"Worried\" | \"Wrathful\" | \"Zesty\" | undefined",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "RarityTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Common\" | \"Uncommon\" | \"Rare\" | \"Epic\" | \"Legendary\"",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            },
            {
                "name": "RedPrefixTypes",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"POP POP!\" | \"I never freeze\" | \"Toasty!\" | \"Was he slow?\" | \"We Hate You, Please Die.\" | \"Tell them they're next\" | \"PAN SHOT!\" | \"Envision Wyverns\" | \"I'm melting!\" | \"The same thing that happens to everything else\" | \"360 quickscope\" | \"Any Questions!\" | \"Blood and Thunder\" | \"SI VIS PACEM, PARA BELLUM\" | \"You're breathtaking!\" | \"Pass turn.\" | \"I am Vengeance!\" | \"Roll the dice\" | \"One among the fence\" | \"Don't be sorry. Be better.\" | \"THE PICKLES!\" | \"Do a kickflip!\" | \"Extinction is the Rule\" | \"Never Fight a Knight with a Perm\" | \"Bye bye, little Butt Stallion\" | \"Time 2 Hack\" | \"Hate Magic... so much\" | \"OFF WITH THEIR HEADS!\" | \"This is my BOOMSTICK!\" | \"Super easy, barely an inconvenience\" | \"Hold onto your butts.\" | \"The Wise Man's Fear\" | \"I don't want this isolation\" | \"TUFF with two Fs\" | \"Unlikely Maths\" | \"Gravity's Rainbow\" | \"Let's do this one last time...\" | \"BIP!\" | \"The Heaviest Matter of the Universe\" | \"GREEN FLAME\" | \"More like Bore Ragnarok!\" | \"That's levitation, Holmes!\" | \"Let's boo-boo.\" | \"Mmm Watcha Say...\" | \"Here Comes the FunCooker\" | \"Overwhelming strength is boring.\" | \"Stop talking, I will win. It's what heroes do.\" | \"Richer and cleverer than everyone else!\" | \"METAL WILL DESTROY ALL EVIL!\" | \"Life is conundrum of esoterica\" | undefined",
                "file": "src/app/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideRouter(routes)]\n}"
                }
            ],
            "src/app/tables.ts": [
                {
                    "name": "ELEMENTAL_TABLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    Common: [\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n    ],\r\n    Uncommon: [\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n    ],\r\n    Rare: [\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n        \"Radiation (+2d6)\",\r\n        \"Corrosive (+2d6)\",\r\n        \"Shock (+2d6)\",\r\n        \"Explosive (+2d6)\",\r\n        \"Incendiary (+2d6)\",\r\n        \"Cryo (+2d6)\",\r\n    ],\r\n    Epic: [\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n        \"Radiation (+2d6)\",\r\n        \"Corrosive (+2d6)\",\r\n        \"Shock (+2d6)\",\r\n        \"Explosive (+2d6)\",\r\n        \"Incendiary (+2d6)\",\r\n        \"Cryo (+2d6)\",\r\n        \"Radiation + Incendiary\",\r\n        \"Shock + Corrosive\",\r\n        \"Explosive + Cryo\",\r\n    ],\r\n    Legendary: [\r\n        \"N/A\",\r\n        \"Radiation\",\r\n        \"Corrosive\",\r\n        \"Shock\",\r\n        \"Explosive\",\r\n        \"Incendiary\",\r\n        \"Cryo\",\r\n        \"Radiation (+1d6)\",\r\n        \"Corrosive (+1d6)\",\r\n        \"Shock (+1d6)\",\r\n        \"Explosive (+1d6)\",\r\n        \"Incendiary (+1d6)\",\r\n        \"Cryo (+1d6)\",\r\n        \"Radiation (+2d6)\",\r\n        \"Corrosive (+2d6)\",\r\n        \"Shock (+2d6)\",\r\n        \"Explosive (+2d6)\",\r\n        \"Incendiary (+2d6)\",\r\n        \"Cryo (+2d6)\",\r\n        \"Radiation + Incendiary\",\r\n        \"Shock + Corrosive\",\r\n        \"Explosive + Cryo\",\r\n    ],\r\n}"
                },
                {
                    "name": "GUILD_BONUSES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    \"Alas!\": {\r\n        Common: \"+1 DMG Mod\",\r\n        Uncommon: \"+2 DMG Mod\",\r\n        Rare: \"+3 DMG Mod\",\r\n        Epic: \"+3 DMG Mod\",\r\n        Legendary: \"+4 DMG Mod\",\r\n        elemental: 0,\r\n    },\r\n    \"Skuldugger\": {\r\n        Common: \"+2 DMG Mod, Overheat 1d4\",\r\n        Uncommon: \"+3 DMG Mod, Overheat 1d6\",\r\n        Rare: \"+4 DMG Mod, Overheat 1d8\",\r\n        Epic: \"+5 DMG Mod, Overheat 1d10\",\r\n        Legendary: \"+6 DMG Mod, Overheat 1d12\",\r\n        elemental: 1,\r\n    },\r\n    \"Dahlia\": {\r\n        Common: \"Burst: +1 Hit\",\r\n        Uncommon: \"Burst: +1 Hit, +1 ACC Mod\",\r\n        Rare: \"Burst: +1 Hit, +2 ACC Mod\",\r\n        Epic: \"Burst: +1 Hit, +3 ACC Mod\",\r\n        Legendary: \"Burst: +1 Hit, +4 ACC Mod\",\r\n        elemental: 1,\r\n    },\r\n    \"Blackpowder\": {\r\n        Common: \"+2 ACC Mod: +2 Crit Damage\",\r\n        Uncommon: \"+2 ACC Mod: +3 Crit Damage\",\r\n        Rare: \"+2 ACC Mod: +4 Crit Damage\",\r\n        Epic: \"+2 ACC Mod: +5 Crit Damage\",\r\n        Legendary: \"+2 ACC Mod: +6 Crit Damage\",\r\n        elemental: 0,\r\n    },\r\n    \"Malefactor\": {\r\n        Common: \"Elemental Roll, -2 DMG Mod\",\r\n        Uncommon: \"Elemental Roll, -2 DMG Mod\",\r\n        Rare: \"+10% Elemental Roll\",\r\n        Epic: \"+15% Elemental Roll\",\r\n        Legendary: \"+20% Elemental Roll\",\r\n        elemental: 2,\r\n    },\r\n    \"Hyperius\": {\r\n        Common: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Uncommon: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Rare: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Epic: \"+1 ACC Mod, -2 DMG Mod\",\r\n        Legendary: \"+1 ACC Mod, -2 DMG Mod\",\r\n        elemental: 1,\r\n    },\r\n    \"Feriore\": {\r\n        Common: \"Swap/Reload: 1d4 Grenade Damage, -3 ACC Mod\",\r\n        Uncommon: \"Swap/Reload: 1d6 Grenade Damage, -3 ACC Mod\",\r\n        Rare: \"Swap/Reload: 1d8 Grenade Damage, -2 ACC Mod\",\r\n        Epic: \"Swap/Reload: 1d10 Grenade Damage, -2 ACC Mod\",\r\n        Legendary: \"Swap/Reload: 1d12 Grenade Damage, -1 ACC Mod\",\r\n        elemental: 1,\r\n    },\r\n    \"Torgue\": {\r\n        Common: \"Splash, -4 ACC Mod\",\r\n        Uncommon: \"Splash, -3 ACC Mod\",\r\n        Rare: \"Splash, -2 ACC Mod\",\r\n        Epic: \"Splash, -1 ACC Mod\",\r\n        Legendary: \"Splash\",\r\n        elemental: 1,\r\n    },\r\n    \"Stoker\": {\r\n        Common: \"Extra Attack, -3 ACC Mod\",\r\n        Uncommon: \"Extra Attack, -2 ACC Mod\",\r\n        Rare: \"Extra Attack, -1 ACC Mod\",\r\n        Epic: \"Extra Attack\",\r\n        Legendary: \"Extra Attack, Extra Movement\",\r\n        elemental: 1,\r\n    },\r\n}"
                },
                {
                    "name": "GUN_GUILDS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    'Alas!',\r\n    'Skuldugger',\r\n    'Feriore',\r\n    'Dahlia',\r\n    'Blackpowder',\r\n    'Malefactor',\r\n    'Stoker',\r\n    'Hyperius',\r\n    'Torgue',\r\n]"
                },
                {
                    "name": "GUN_RARITIES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    'Common',\r\n    'Common (Element Roll)',\r\n    'Uncommon',\r\n    'Uncommon (Element Roll)',\r\n    'Rare',\r\n    'Rare (Element Roll)',\r\n    'Epic',\r\n    'Epic (Element Roll)',\r\n    'Legendary',\r\n    'Legendary (Element Roll)',\r\n]"
                },
                {
                    "name": "GUN_RARTIY_TABLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    [1,2,2,3,4,5],\r\n    [1,2,3,4,6,7],\r\n    [4,5,6,7,8,10],\r\n    [6,6,8,8,10,10]\r\n]"
                },
                {
                    "name": "GUN_TABLE",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    [\"Skuldugger\", \"Feriore\", \"Dahlia\", \"Blackpowder\", \"Alas!\", \"Malefactor\", \"Stoker\", \"Hyperius\"],\r\n    [\"Malefactor\", \"Skuldugger\", \"Hyperius\", \"Feriore\", \"Torgue\", \"Dahlia\", \"Skuldugger\", \"Feriore\"],\r\n    [\"Hyperius\", \"Blackpowder\", \"Skuldugger\", \"Feriore\", \"Torgue\", \"Stoker\", \"Alas!\", \"Malefactor\"],\r\n    [\"Feriore\", \"Dahlia\", \"Torgue\", \"Stoker\", \"Hyperius\", \"Alas!\", \"Dahlia\", \"Alas!\"],\r\n    [\"Skuldugger\", \"Alas!\", \"Blackpowder\", \"Malefactor\", \"Dahlia\", \"Hyperius\", \"Stoker\", \"Torgue\"],\r\n    [\"Stoker\", \"Torgue\", \"Malefactor\", \"Hyperius\", \"Stoker\", \"Torgue\", \"Malefactor\", \"Hyperius\"],\r\n    [\"Torgue\", \"Dahlia\", \"Blackpowder\", \"Skuldugger\", \"Blackpowder\", \"Feriore\", \"Blackpowder\", \"Any\"],\r\n]"
                },
                {
                    "name": "GUN_TYPE_RESULTS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\r\n    \"Pistol\",\r\n    \"Submachine Gun\",\r\n    \"Shotgun\",\r\n    \"Combat Rifle\",\r\n    \"Sniper Rifle\",\r\n    \"Rocket Launcher\",\r\n    \"You rolled a 7\",\r\n    \"Favored Gun\"\r\n]"
                },
                {
                    "name": "GUN_TYPE_STATS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    \"Pistol\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 3, crits: 0 },\r\n                },\r\n                damage: [2,4],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 3, crits: 1 },\r\n                },\r\n                damage: [1,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [2,8],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [2,8],\r\n                range: 5,\r\n            },\r\n        ],\r\n        bonus: '',\r\n    },\r\n    \"Submachine Gun\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 0 },\r\n                    \"16+\": { hits: 5, crits: 0 },\r\n                },\r\n                damage: [1,4],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 4, crits: 0 },\r\n                    \"16+\": { hits: 5, crits: 1 },\r\n                },\r\n                damage: [2,4],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 1 },\r\n                    \"16+\": { hits: 5, crits: 1 },\r\n                },\r\n                damage: [1,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 4, crits: 1 },\r\n                },\r\n                damage: [2,6],\r\n                range: 5,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 2 },\r\n                    \"8-15\": { hits: 3, crits: 2 },\r\n                    \"16+\": { hits: 5, crits: 2 },\r\n                },\r\n                damage: [1,10],\r\n                range: 5,\r\n            },\r\n        ],\r\n        bonus: '' \r\n    },\r\n    \"Shotgun\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,8],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,8],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,8],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,10],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,12],\r\n                range: 4,\r\n            },\r\n        ],\r\n        bonus: 'If Range 2 or Less: +2 Damage'\r\n    },\r\n    \"Combat Rifle\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 0 },\r\n                    \"16+\": { hits: 3, crits: 1 },\r\n                },\r\n                damage: [1,6],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 2, crits: 0 },\r\n                    \"8-15\": { hits: 3, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [1,8],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,8],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 3, crits: 1 },\r\n                },\r\n                damage: [2,6],\r\n                range: 6,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 2, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 3 },\r\n                },\r\n                damage: [1,10],\r\n                range: 6,\r\n            },\r\n        ],\r\n        bonus: ''\r\n    },\r\n    \"Sniper Rifle\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 0, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,10],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 0, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,12],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [1,10],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [2,10],\r\n                range: 8,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 2 },\r\n                },\r\n                damage: [1,12],\r\n                range: 8,\r\n            },\r\n        ],\r\n        bonus: 'If range 3+: +3 Accuracy'\r\n    },\r\n    \"Rocket Launcher\": {\r\n        tier: [\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [1,12],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 1 },\r\n                },\r\n                damage: [2,10],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 1, crits: 2 },\r\n                },\r\n                damage: [1,12],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 0 },\r\n                    \"8-15\": { hits: 1, crits: 0 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [2,12],\r\n                range: 4,\r\n            },\r\n            {\r\n                accuracy: {\r\n                    \"2-7\": { hits: 1, crits: 1 },\r\n                    \"8-15\": { hits: 1, crits: 1 },\r\n                    \"16+\": { hits: 2, crits: 1 },\r\n                },\r\n                damage: [1,20],\r\n                range: 4,\r\n            },\r\n        ],\r\n        bonus: 'Splash'\r\n    },\r\n}"
                },
                {
                    "name": "PREFIXES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    \"Aback\": \"Enemies Hit in the front are spun backwards\",\r\n    \"Aberrant\": \"Gains the stats of a random gun type\",\r\n    \"Abhorrent\": \"Enemies cannot stay within 1 square while this gun is equipped\",\r\n    \"Abiding\": \"Grants +1 to all Search Checks while equipped\",\r\n    \"Abrasive\": \"Adds +1 Crit to Melee Attacks\",\r\n    \"Actually\": \"Can reroll Accuracy once per turn when firing this gun\",\r\n    \"Adhesive\": \"Enemies Hit begin to stick to anything they come into contact with\",\r\n    \"Adorable\": \"25% chance to distract Enemies with baby animal hallucinations\",\r\n    \"Bitter\": \"Enemies get -1 to their Attack Rolls for each Enemy killed by this gun in this encounter\",\r\n    \"Boundless\": \"Generates a Loot Pile when it Hits an Enemy\",\r\n    \"Breezy\": \"Enemies targeted are struck by a gust of wind that pushes them 1 square backwards\",\r\n    \"Certain\": \"Grants a +2 bonus during Badass attempts\",\r\n    \"Cheerful\": \"Grants +1 to all Talk Checks while equipped\",\r\n    \"Classy\": \"Gun will only fire if the wielder has the pinky of their hand shooting out\",\r\n    \"Clever\": \"Grants +1 to all Insight Checks while equipped\",\r\n    \"Critical\": \"Rolled hits become Crits. Rolled Crits become misses\",\r\n    \"Damp\": \"Creates puddles of water under Enemies Hit\",\r\n    \"Deafening\": \"Screams when fired, dealing 1 Damage to all adjacent targets\",\r\n    \"Disgusted\": \"Deals +1d6 Corrosive Damage. Enemies killed die badly\",\r\n    \"Eatable\": \"Can consume the gun when Reloading to gain 2d4 Health\",\r\n    \"Economic\": \"Enemies drop 2 gold per Hit and 5 gold per Crit\",\r\n    \"Elfin\": \"Increases Movement by 1 square while firing\",\r\n    \"Exciting\": \"50% chance for Explosive rounds\",\r\n    \"Far-Flung\": \"Double the Range of any Thrown item while this gun is equipped\",\r\n    \"Far\": \"Double the Range of this gun\",\r\n    \"Few\": \"Max 1 Hit. Deal an additional 3 damage for each unused Hit\",\r\n    \"Fresh\": \"First Attack of an encounter deals 2x Damage\",\r\n    \"Frightening\": \"Enemies within 2 squares are compelled to take Cover\",\r\n    \"Gaudy\": \"Highly reflective, which can be used to temporarily blind Enemies, giving them -3 on Attack Rolls\",\r\n    \"Grey\": \"Deals 2x Damage. Enemies Hit drop 1 less Loot Pile and only drop Common items\",\r\n    \"Grotesque\": \"Gun looks horrific, possibly cursed. A counter increases every time it kills an Enemy\",\r\n    \"Handsomely\": \"Add Damage equal to your Talk modifier\",\r\n    \"Holistic\": \"Damage is dealt to Shield Armor, and Health\",\r\n    \"Honorable\": \"All rounds Hit Enemies in the front\",\r\n    \"Horrible\": \"Enemies killed by this gun explode\",\r\n    \"Humdrum\": \"Enemies Hit experience ennui\",\r\n    \"Hysterical\": \"Enemies Hit burst out laughing. cause -1 to Attack Rolls\",\r\n    \"Imaginary\": \"Appears as if you are not holding any gun. Makes fake firing noises when fired\",\r\n    \"Imminent\": \"Enemies Hit take increasing Damage each turn. Damage starts at 1 and increases by 1 with each Hit/turn\",\r\n    \"Impolite\": \"Randomly burps out a Loot Pile when fired\",\r\n    \"Incandescent\": \"Shines brighter when being fired\",\r\n    \"Jazzy\": \"10% chance the non-Boss Enemy lets go of any weapons and starts doing 'jazz hands'\",\r\n    \"Joyous\": \"Plays upbeat music when being fired\",\r\n    \"Jumbled\": \"Has the Accuracy and Damage of one gun type, but the Range and bonuses of another\",\r\n    \"Knotty\": \"Ties an Enemy's shoes together, reducing their Movement by 1\",\r\n    \"Knowing\": \"Knows all. Can ask the gun a question once per day\",\r\n    \"Labored\": \"Adds +3 DMG Mod if standing still\",\r\n    \"Legal\": \"Enemies Hit are considered to be under a legally binding contract to drop 1 extra Loot Pile when they die\",\r\n    \"Light\": \"Fires rays of light that deal +1d6 Incendiary Damage\",\r\n    \"Lively\": \"This gun has an AI that thinks it's alive. It can open any door once per day\",\r\n    \"Mad\": \"Enemies Hit have a 50% chance of being Taunted\",\r\n    \"Madly\": \"Enemies Hit have 50% chance of becoming Confused\",\r\n    \"Mixed\": \"For each Hit/Crit, gather the next die for Damage. d6, d8, d10, d12, d20\",\r\n    \"Mundane\": \"Grants +1 to all Sneak Checks while equipped\",\r\n    \"Normal\": \"Appearance of a Common gun\",\r\n    \"Nutty\": \"Instantly kills any Enemy with a nut allergy\",\r\n    \"Obnoxious\": \"Guaranteed Insight Check once per day at the cost of having to listen to the gun drone on and on and on\",\r\n    \"Obtainable\": \"Must be picked up using an Interact (17+) Check. Deals 2x Damage\",\r\n    \"One\": \"Can only be fired once per day\",\r\n    \"Open\": \"Once per turn, you may Reload this gun as a free Action without generating Mayhem\",\r\n    \"Overconfident\": \"If Accuracy Roll is 10 or less, all Hits are Crits\",\r\n    \"Panoramic\": \"Fires in a 180 degree arc. Hits/Crits can each be applied to a different enemy in Range\",\r\n    \"Parallel\": \"Rounds split into 2 parellel lines that can Hit Enemies in 2 adjacent squares\",\r\n    \"Practical\": \"Swapping to a different gun grants the wielder a Badass Token\",\r\n    \"Pumped\": \"Lifts Enemies Hit a foot off the ground\",\r\n    \"Puny\": \"Appearance of a miniature gun\",\r\n    \"Questionable\": \"Deals 2x Damage to Enemies that can question their existence\",\r\n    \"Relevant\": \"Will deliver cryptic information on a topic up to 3x a day\",\r\n    \"Resolute\": \"Cannot be fired on the first turn of an encounter. Deals 2x Damage\",\r\n    \"Same\": \"Enemies Hit will take an equal amount of Damage from the gun for each Attack\",\r\n    \"Scintillating\": \"50% chance to Hit the chest or groin of Enemy\",\r\n    \"Selfish\": \"Deals 1d6 Damage to wielder when changing to another equipped gun\",\r\n    \"Several\": \"Splits into 2 guns that are dual wielded\",\r\n    \"Shaky\": \"Gun shakes uncontrollably. Enemies Hit also shake uncontrollably\",\r\n    \"Sleepy\": \"Enemies Hit are Slowed\",\r\n    \"Small\": \"Can have a 4th gun equipped as long as this gun is equipped\",\r\n    \"Smelly\": \"Enemies Hit take 1d6 Radiation Damage\",\r\n    \"Splendid\": \"Deals 2x Damage to Badass-type Enemies\",\r\n    \"Strong\": \"Grants +1 to all Interact Checks while equipped\",\r\n    \"Stupendous\": \"Double the Hits of this gun. Attacks deal 2d4 Damage to the wielder\",\r\n    \"Suitable\": \"Can disguise the wielder in a suit of any kind once per day\",\r\n    \"Superb\": \"Grants +1 to Mods on the gun\",\r\n    \"Swift\": \"Grants a free Melee Attack each turn\",\r\n    \"Synonymous\": \"Grants Guild bonuses twice\",\r\n    \"Tart\": \"Enemies react as if they have eaten something tart, getting -1 to their next Attack Roll\",\r\n    \"Tawdry\": \"When Reloaded, becomes a grenade that deals 3d8 Damage\",\r\n    \"Tender\": \"Converts 10% of Damage dealt into Health for an adjacent ally\",\r\n    \"Tense\": \"30% chance to taze the Enemy, dealing 1d6 Shock Damage\",\r\n    \"Thirsty\": \"Converts 10% of Damage dealt into Health\",\r\n    \"Toothsome\": \"Gets a Bite Attack each turn for 1d6 Damage to an adjacent target\",\r\n    \"Towering\": \"Wielder appears twice their size while gun is equipped\",\r\n    \"Two\": \"Creates a duplicate gun. Must be fired at the same time. 3x Damage\",\r\n    \"Unable\": \"Enemies hit cannot take Mayhem Actions\",\r\n    \"Unfair\": \"An Extra Attack with this gun does not generate Mayhem\",\r\n    \"Unwieldy\": \"Twice the size of a normal gun. 2x Damage. Reloading takes 2 turns\",\r\n    \"Utter\": \"There is a secret password that activates 3x Damage for the next 2 turns. Wielder can guess once per encounter\",\r\n    \"Woozy\": \"Each time an Enemy is Hit by this gun, 10% chance they pass out\",\r\n    \"Worried\": \"Crits have a 50% chance to make BR 8 or less Enemies flee\",\r\n    \"Wrathful\": \"Deals 2x Damage to Enemies that have Damaged the wielder\",\r\n    \"Zesty\": \"Enemies killed by this gun grant the wielder 1 Badass Token\"\r\n  }"
                },
                {
                    "name": "RED_PREFIXES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/tables.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n    \"POP POP!\": 'Deals Crit Damage twice',\r\n    \"I never freeze\": 'Adds Cryo Element Type',\r\n    \"Toasty!\": 'Adds Incendiary Element type',\r\n    \"Was he slow?\": 'Fires backwards',\r\n    \"We Hate You, Please Die.\": 'Taunts the farthest Enemy each turn.',\r\n    \"Tell them they're next\": \"Won\\'t deal Damage to the final Enemy in an encounter\",\r\n    \"PAN SHOT!\": 'Always Hits the closest Enemy',\r\n    \"Envision Wyverns\": 'Adds Radiation Element type',\r\n    \"I'm melting!\": 'Adds Corrosive Element type',\r\n    \"The same thing that happens to everything else\": 'Adds Shock Element type',\r\n    \"360 quickscope\": 'Adds a Crit to each Ranged Attack',\r\n    \"Any Questions!\": 'Shoots pumpkin bombs that deal an extra 3d6 Explosive Damage.',\r\n    \"Blood and Thunder\": 'Take 1d6 Health Damage to deal +3d6 Shock Damage',\r\n    \"SI VIS PACEM, PARA BELLUM\": 'Gain Extra Attack if Acting Before Enemies',\r\n    \"You're breathtaking!\": 'Wielder cannot be targeted on the first turn of an encounter',\r\n    \"Pass turn.\": 'Wielder may Throw a grenade during the End of Turn step',\r\n    \"I am Vengeance!\": 'Deals 2x Damage to Enemies adjacent to allies',\r\n    \"Roll the dice\": 'If Accuracy Roll is even, 2x Damage. If Accuracy Roll is odd, half Damage',\r\n    \"One among the fence\": 'Add 21 Damage if you roll 13+ on your Accuracy Roll. (1/day)',\r\n    \"Don't be sorry. Be better.\": 'Reroll the Badass Die once per day',\r\n    \"THE PICKLES!\": 'Shoots flaming cheeseburgers that deal an extra 2d6 Incendiary Damage',\r\n    \"Do a kickflip!\": '+4 on Traverse Checks while equipped',\r\n    \"Extinction is the Rule\": 'Teleport to any square up to 4 away when you kill an Enemy',\r\n    \"Never Fight a Knight with a Perm\": 'DMG Mod +6 against non-human Enemies.',\r\n    \"Bye bye, little Butt Stallion\": 'Shots explode into rainbows that deal an extra 1d8 Damage',\r\n    \"Time 2 Hack\": '+4 in Interact Checks and Melee Damage while equipped',\r\n    \"Hate Magic... so much\": '+3 DMG Mod. Take 2d6 Vomit Damage if Reloaded',\r\n    \"OFF WITH THEIR HEADS!\": \"Roll %s. 95%+: the Enemy's head falls off\",\r\n    \"This is my BOOMSTICK!\": 'Deals 3x Damage to skeletons',\r\n    \"Super easy, barely an inconvenience\": 'Automatically pass the first Check each day',\r\n    \"Hold onto your butts.\": 'When fired, the wielder and targets Hit are Knocked Back 2 squares',\r\n    \"The Wise Man's Fear\": 'Deals 3x Damage to all wizards',\r\n    \"I don't want this isolation\": \"Won't fire unless adjacent to an ally or target\",\r\n    \"TUFF with two Fs\": 'Prevents the first 5 Health Damage each turn',\r\n    \"Unlikely Maths\": 'Roll an extra die of each type rolled during an Attack and take the highest result(s)',\r\n    \"Gravity's Rainbow\": 'First Attack against a Badass target always deals max Damage',\r\n    \"Let's do this one last time...\": \"Shoots webs that reduce the target's movement to 0 for 1 turn\",\r\n    \"BIP!\": 'Once per encounter, the wielder can run into squares with an Enemy, Knocking them back 1 square',\r\n    \"The Heaviest Matter of the Universe\": 'The wielder and targets Hit cannot take Movement Actions while equipped',\r\n    \"GREEN FLAME\": 'Shoots burst of green flames while firing, dealing 2d6 Incendiary Damage to adjacent targets',\r\n    \"More like Bore Ragnarok!\": 'Gain 1 Badass Token after a successful Talk Check while equipped',\r\n    \"That's levitation, Holmes!\": 'Ignore difficult terrain while equipped',\r\n    \"Let's boo-boo.\": 'Gain Extra Movement after drinking a potion while equipped',\r\n    \"Mmm Watcha Say...\": 'Gain a Ranged Attack if an Enemy is talking before an encounter',\r\n    \"Here Comes the FunCooker\": 'When this gun scores a Crit, the Enemy suffers a miniature combustion, dealing 1d12 Explosive Damage to itself and all adjacent squares',\r\n    \"Overwhelming strength is boring.\": '-6 Initiative. The first non-Badass, non-boss Enemy that is Melee Attacked dies instantly (1/day)',\r\n    \"Stop talking, I will win. It's what heroes do.\": 'Gun fires explosives that deal +3d6 Damage to all adjacent squares',\r\n    \"Richer and cleverer than everyone else!\": 'Add 10 gold per Loot Pile when rolling for Enemy Drops',\r\n    \"METAL WILL DESTROY ALL EVIL!\": 'Allies get +2 ACC Mod each turn you perform a Melee Attack',\r\n    \"Life is conundrum of esoterica\": 'Gain 2 Badass Tokens for the first time you roll a Trauma each day',\r\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/types.ts": [
                {
                    "name": "ElementTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Incendiary\" | \"Incendiary (+1d6)\" | \"Incendiary (+2d6)\" | \"Shock\" | \"Shock (+1d6)\" | \"Shock (+2d6)\" | \"Corrosive\" | \"Corrosive (+1d6)\" | \"Corrosive (+2d6)\" | \"Cryo\" | \"Cryo (+1d6)\" | \"Cryo (+2d6)\" | \"Explosive\" | \"Explosive (+1d6)\" | \"Explosive (+2d6)\" | \"Radiation\" | \"Radiation (+1d6)\" | \"Radiation (+2d6)\" | \"Radiation + Incendiary\" | \"Shock + Corrosive\" | \"Explosive + Cryo\" | \"N/A\"",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "GuildTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Alas!\" | \"Skuldugger\" | \"Dahlia\" | \"Blackpowder\" | \"Malefactor\" | \"Hyperius\" | \"Feriore\" | \"Torgue\" | \"Stoker\" | undefined",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "GunTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Pistol\" | \"Submachine Gun\" | \"Shotgun\" | \"Combat Rifle\" | \"Sniper Rifle\" | \"Rocket Launcher\" | undefined",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "PrefixTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Aback\" | \"Aberrant\" | \"Abhorrent\" | \"Abiding\" | \"Abrasive\" | \"Actually\" | \"Adhesive\" | \"Adorable\" | \"Bitter\" | \"Boundless\" | \"Breezy\" | \"Certain\" | \"Cheerful\" | \"Classy\" | \"Clever\" | \"Critical\" | \"Damp\" | \"Deafening\" | \"Disgusted\" | \"Eatable\" | \"Economic\" | \"Elfin\" | \"Exciting\" | \"Far-Flung\" | \"Far\" | \"Few\" | \"Fresh\" | \"Frightening\" | \"Gaudy\" | \"Grey\" | \"Grotesque\" | \"Handsomely\" | \"Holistic\" | \"Honorable\" | \"Horrible\" | \"Humdrum\" | \"Hysterical\" | \"Imaginary\" | \"Imminent\" | \"Impolite\" | \"Incandescent\" | \"Jazzy\" | \"Joyous\" | \"Jumbled\" | \"Knotty\" | \"Knowing\" | \"Labored\" | \"Legal\" | \"Light\" | \"Lively\" | \"Mad\" | \"Madly\" | \"Mixed\" | \"Mundane\" | \"Normal\" | \"Nutty\" | \"Obnoxious\" | \"Obtainable\" | \"One\" | \"Open\" | \"Overconfident\" | \"Panoramic\" | \"Parallel\" | \"Practical\" | \"Pumped\" | \"Puny\" | \"Questionable\" | \"Relevant\" | \"Resolute\" | \"Same\" | \"Scintillating\" | \"Selfish\" | \"Several\" | \"Shaky\" | \"Sleepy\" | \"Small\" | \"Smelly\" | \"Splendid\" | \"Strong\" | \"Stupendous\" | \"Suitable\" | \"Superb\" | \"Swift\" | \"Synonymous\" | \"Tart\" | \"Tawdry\" | \"Tender\" | \"Tense\" | \"Thirsty\" | \"Toothsome\" | \"Towering\" | \"Two\" | \"Unable\" | \"Unfair\" | \"Unwieldy\" | \"Utter\" | \"Woozy\" | \"Worried\" | \"Wrathful\" | \"Zesty\" | undefined",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "RarityTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Common\" | \"Uncommon\" | \"Rare\" | \"Epic\" | \"Legendary\"",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                },
                {
                    "name": "RedPrefixTypes",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"POP POP!\" | \"I never freeze\" | \"Toasty!\" | \"Was he slow?\" | \"We Hate You, Please Die.\" | \"Tell them they're next\" | \"PAN SHOT!\" | \"Envision Wyverns\" | \"I'm melting!\" | \"The same thing that happens to everything else\" | \"360 quickscope\" | \"Any Questions!\" | \"Blood and Thunder\" | \"SI VIS PACEM, PARA BELLUM\" | \"You're breathtaking!\" | \"Pass turn.\" | \"I am Vengeance!\" | \"Roll the dice\" | \"One among the fence\" | \"Don't be sorry. Be better.\" | \"THE PICKLES!\" | \"Do a kickflip!\" | \"Extinction is the Rule\" | \"Never Fight a Knight with a Perm\" | \"Bye bye, little Butt Stallion\" | \"Time 2 Hack\" | \"Hate Magic... so much\" | \"OFF WITH THEIR HEADS!\" | \"This is my BOOMSTICK!\" | \"Super easy, barely an inconvenience\" | \"Hold onto your butts.\" | \"The Wise Man's Fear\" | \"I don't want this isolation\" | \"TUFF with two Fs\" | \"Unlikely Maths\" | \"Gravity's Rainbow\" | \"Let's do this one last time...\" | \"BIP!\" | \"The Heaviest Matter of the Universe\" | \"GREEN FLAME\" | \"More like Bore Ragnarok!\" | \"That's levitation, Holmes!\" | \"Let's boo-boo.\" | \"Mmm Watcha Say...\" | \"Here Comes the FunCooker\" | \"Overwhelming strength is boring.\" | \"Stop talking, I will win. It's what heroes do.\" | \"Richer and cleverer than everyone else!\" | \"METAL WILL DESTROY ALL EVIL!\" | \"Life is conundrum of esoterica\" | undefined",
                    "file": "src/app/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/39",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/gun-card-v2/gun-card-v2.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GunCardV2Component",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/gun-card/gun-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "GunCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/history-list-item/history-list-item.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistoryListItemComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/history-list/history-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HistoryListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ELEMENTAL_TABLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUILD_BONUSES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUN_GUILDS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUN_RARITIES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUN_RARTIY_TABLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUN_TABLE",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUN_TYPE_RESULTS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "GUN_TYPE_STATS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PREFIXES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/tables.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RED_PREFIXES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/types.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GunCard",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}